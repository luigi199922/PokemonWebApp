{"ast":null,"code":"import axios from \"../../axios/auth\";\nimport * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return {\n    type: actionTypes.CHECK_AUTH_TIMEOUT,\n    expirationTime: expirationTime\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error\n  };\n};\nexport const logoutSuccess = data => {\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n    data: data\n  };\n};\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_USER_LOGOUT\n  };\n};\nexport const signup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart()); // Headers\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const authData = {\n      \"username\": username,\n      \"email\": email,\n      \"password1\": password1,\n      \"password2\": password2\n    };\n    console.log(authData);\n    let url = \"registration/\";\n    axios.post(url, authData, config).then(res => {\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", res.data.key);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      localStorage.setItem(\"userId\", email);\n      dispatch(authSuccess(res.data.key, email));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n}; // export const signupSuccess= () => {\n//   return {\n//     action: actionTypes.AUTH_SIGNUP_SUCCESS\n//   }\n// }\n// export const signupFailed= (error) => {\n//   return {\n//     action: actionTypes.AUTH_SIGNUP_FAILED,\n//     error: error,\n//   }\n// }\n\nexport const login = (email, password) => {\n  return {\n    type: actionTypes.AUTH_LOGIN,\n    email: email,\n    password: password\n  };\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport const getUserCredetials = authData => {\n  return dispatch => {\n    let url = \"user/\";\n    axios.post(url, authData).then(res => {\n      const userData = {\n        pk: res.data.pk,\n        username: res.data.username,\n        email: res.data.email\n      };\n      dispatch(setUserInformation(userData));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const setUserInformation = userData => {\n  return {\n    type: actionTypes.SET_USER_INFORMATION,\n    userData: userData\n  };\n};\nexport const authCheckState = () => {\n  return {\n    type: actionTypes.AUTH_CHECK_STATE\n  };\n};","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","checkAuthTimeout","expirationTime","CHECK_AUTH_TIMEOUT","authFail","error","AUTH_FAILED","logoutSuccess","data","AUTH_LOGOUT","logout","AUTH_USER_LOGOUT","signup","username","email","password1","password2","dispatch","config","headers","authData","console","log","url","post","then","res","expirationDate","Date","getTime","localStorage","setItem","key","catch","err","login","password","AUTH_LOGIN","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","getUserCredetials","userData","pk","setUserInformation","SET_USER_INFORMATION","authCheckState","AUTH_CHECK_STATE"],"mappings":"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","sourcesContent":["import axios from \"../../axios/auth\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n return {\n   type : actionTypes.CHECK_AUTH_TIMEOUT,\n   expirationTime: expirationTime,\n\n }\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error\n  };\n};\n\nexport const logoutSuccess = data => {\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n    data: data\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_USER_LOGOUT\n  }\n};\n\nexport const signup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    // Headers\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const authData = {\n      \"username\": username,\n      \"email\": email,\n      \"password1\": password1,\n      \"password2\": password2\n    };\n    console.log(authData)\n    let url = \"registration/\";\n    axios\n      .post(url, authData, config)\n      .then(res => {\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n\n        localStorage.setItem(\"token\", res.data.key);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        localStorage.setItem(\"userId\", email);\n        dispatch(authSuccess(res.data.key, email));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\n// export const signupSuccess= () => {\n//   return {\n//     action: actionTypes.AUTH_SIGNUP_SUCCESS\n//   }\n// }\n\n// export const signupFailed= (error) => {\n//   return {\n//     action: actionTypes.AUTH_SIGNUP_FAILED,\n//     error: error,\n//   }\n// }\n\nexport const login = (email, password) => {\n  return{\n    type: actionTypes.AUTH_LOGIN,\n    email: email,\n    password: password,\n\n  }\n};\n\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\n\nexport const getUserCredetials = (authData) => {\n  return dispatch => {\n    let url = \"user/\";\n    axios.post(url,  authData).then(res=> {\n      const userData = {\n        pk : res.data.pk,\n        username: res.data.username,\n        email: res.data.email,\n    }\n    dispatch(setUserInformation(userData))\n    })\n    .catch(err => {\n      dispatch(authFail(err))\n    })\n  }\n}\n\nexport const setUserInformation = userData => {\n  return {\n    type: actionTypes.SET_USER_INFORMATION,\n    userData: userData,\n  }\n}\n\nexport const authCheckState = () => {\n  return {\n    type: actionTypes.AUTH_CHECK_STATE\n  }\n}"]},"metadata":{},"sourceType":"module"}