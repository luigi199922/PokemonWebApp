{"ast":null,"code":"import * as actions from \"./actionTypes\";\nimport axios from \"../../axios/axios\";\nimport axiosUsers from \"../../axios/users\";\nexport const fetchPokemon = (offset, limit) => {\n  return dispatch => {\n    axios.get(\"/?offset=\" + offset + \"&limit=\" + limit).then(response => {\n      //maybe get the page number and add it to the url\n      dispatch(fetchPokemonSuccess(response.data.results, offset, limit));\n    }).catch(error => {\n      dispatch(fetchPokemonFailed());\n    });\n  };\n};\nexport const fetchPokemonFailed = () => {\n  return {\n    type: actions.FETCH_POKEMON_FAILED\n  };\n};\nexport const addPokemonToState = pokemon => {\n  return {\n    type: actions.ADD_POKEMON_TO_STATE,\n    pokemon: pokemon\n  };\n};\nexport const fetchPokemonSuccess = (pokemonArray, lowerBound, upperBound) => {\n  return {\n    type: actions.FETCH_POKEMON_SUCCESS,\n    pokemon: pokemonArray,\n    lower: lowerBound,\n    upper: upperBound\n  };\n};\nexport const nextPokemonPage = (offset, limit) => {\n  const newOffset = offset + 28;\n  return fetchPokemon(newOffset, limit);\n};\nexport const previousPokemonPage = (offset, limit) => {\n  const newOffset = offset - 28;\n  return fetchPokemon(newOffset, limit);\n};\nexport const fetchPokemonById = id => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID,\n    id: id\n  };\n};\nexport const fetchPokemonByIdSuccess = pokemon => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_SUCCESS,\n    pokemon: pokemon\n  };\n};\nexport const fetchPokemonByIdFailed = err => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_FAILED,\n    error: err\n  };\n};\nexport const removePokemonFromState = () => {\n  return {\n    type: actions.REMOVE_POKEMON_FROM_STATE\n  };\n};\nexport const getUserFavoritePokemon = id => {\n  return dispatch => {\n    axiosUsers.get(\"user-favorite/\" + id).then(res => {\n      const pokemonArray = res.data;\n      dispatch(getUserFavoritePokemonSuccess(pokemonArray));\n    }).catch(error => {\n      dispatch(getUserFavoritePokemonFailed(error));\n    });\n  };\n};\nexport const getUserFavoritePokemonSuccess = pokemonArray => {\n  return {\n    type: actions.GET_USER_FAVORITE_POKEMON_SUCCESS,\n    pokemon: pokemonArray\n  };\n};\nexport const getUserFavoritePokemonFailed = error => {\n  return {\n    type: actions.GET_USER_FAVORITE_POKEMON_FAILED,\n    error: error\n  };\n};","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/actions/pokemon.js"],"names":["actions","axios","axiosUsers","fetchPokemon","offset","limit","dispatch","get","then","response","fetchPokemonSuccess","data","results","catch","error","fetchPokemonFailed","type","FETCH_POKEMON_FAILED","addPokemonToState","pokemon","ADD_POKEMON_TO_STATE","pokemonArray","lowerBound","upperBound","FETCH_POKEMON_SUCCESS","lower","upper","nextPokemonPage","newOffset","previousPokemonPage","fetchPokemonById","id","FETCH_POKEMON_BY_ID","fetchPokemonByIdSuccess","FETCH_POKEMON_BY_ID_SUCCESS","fetchPokemonByIdFailed","err","FETCH_POKEMON_BY_ID_FAILED","removePokemonFromState","REMOVE_POKEMON_FROM_STATE","getUserFavoritePokemon","res","getUserFavoritePokemonSuccess","getUserFavoritePokemonFailed","GET_USER_FAVORITE_POKEMON_SUCCESS","GET_USER_FAVORITE_POKEMON_FAILED"],"mappings":"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","sourcesContent":["import * as actions from \"./actionTypes\";\nimport axios from \"../../axios/axios\";\nimport axiosUsers from \"../../axios/users\";\n\nexport const fetchPokemon = (offset, limit) => {\n  return dispatch => {\n    axios\n      .get(\"/?offset=\" + offset + \"&limit=\" + limit)\n      .then(response => {\n        //maybe get the page number and add it to the url\n        dispatch(fetchPokemonSuccess(response.data.results, offset, limit));\n      })\n      .catch(error => {\n        dispatch(fetchPokemonFailed());\n      });\n  };\n};\nexport const fetchPokemonFailed = () => {\n  return {\n    type: actions.FETCH_POKEMON_FAILED\n  };\n};\nexport const addPokemonToState = pokemon => {\n  return {\n    type: actions.ADD_POKEMON_TO_STATE,\n    pokemon: pokemon\n  };\n};\n\nexport const fetchPokemonSuccess = (pokemonArray, lowerBound, upperBound) => {\n  return {\n    type: actions.FETCH_POKEMON_SUCCESS,\n    pokemon: pokemonArray,\n    lower: lowerBound,\n    upper: upperBound\n  };\n};\n\nexport const nextPokemonPage = (offset, limit) => {\n  const newOffset = offset + 28;\n  return fetchPokemon(newOffset, limit);\n};\n\nexport const previousPokemonPage = (offset, limit) => {\n  const newOffset = offset - 28;\n  return fetchPokemon(newOffset, limit);\n};\n\nexport const fetchPokemonById = id => {\n  return {\n    type : actions.FETCH_POKEMON_BY_ID,\n    id : id\n  }\n};\nexport const fetchPokemonByIdSuccess = pokemon => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_SUCCESS,\n    pokemon: pokemon\n  };\n};\nexport const fetchPokemonByIdFailed = err => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_FAILED,\n    error: err\n  };\n};\n\nexport const removePokemonFromState = () => {\n  return {\n    type: actions.REMOVE_POKEMON_FROM_STATE\n  };\n};\n\nexport const getUserFavoritePokemon = id => {\n  return dispatch => {\n    axiosUsers\n      .get(\"user-favorite/\" + id)\n      .then(res => {\n        const pokemonArray = res.data\n        dispatch(getUserFavoritePokemonSuccess(pokemonArray));\n      })\n      .catch(error => {\n        dispatch(getUserFavoritePokemonFailed(error));\n      });\n  };\n};\n\nexport const getUserFavoritePokemonSuccess = (pokemonArray) => {\n  return {\n    type: actions.GET_USER_FAVORITE_POKEMON_SUCCESS,\n    pokemon: pokemonArray\n  };\n};\n\nexport const getUserFavoritePokemonFailed = (error) => {\n    return {\n      type: actions.GET_USER_FAVORITE_POKEMON_FAILED,\n      error: error,\n    };\n  };\n"]},"metadata":{},"sourceType":"module"}