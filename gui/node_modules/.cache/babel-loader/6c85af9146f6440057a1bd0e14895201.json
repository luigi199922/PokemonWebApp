{"ast":null,"code":"import axios from \"../../axios/auth\";\nimport * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error\n  };\n};\nexport const logoutSuccess = data => {\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n    data: data\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationDate\");\n    localStorage.removeItem(\"userId\");\n    const url = \"logout/\";\n    axios.post(url).then(res => {\n      console.log(res.data);\n      dispatch(logoutSuccess(res.data));\n    }).catch(err => {\n      dispatch(authFail(err.response.data));\n    });\n  };\n};\nexport const signup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    });\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };\n    fetch(\"http://127.0.0.1:8000/rest-auth/registration/\", requestOptions).then(res => {\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", res.data.key);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      localStorage.setItem(\"userId\", email);\n      dispatch(authSuccess(res.data.key, email));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => dispatch(authFail(err)));\n  };\n}; // export const signupSuccess= () => {\n//   return {\n//     action: actionTypes.AUTH_SIGNUP_SUCCESS\n//   }\n// }\n// export const signupFailed= (error) => {\n//   return {\n//     action: actionTypes.AUTH_SIGNUP_FAILED,\n//     error: error,\n//   }\n// }\n\nexport const login = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      username: \"\",\n      email: email,\n      password: password\n    };\n    let url = \"login/\";\n    axios.post(url, authData).then(res => {\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", res.data.key);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      localStorage.setItem(\"userId\", email);\n      dispatch(authSuccess(res.data.key, email));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err.response.data));\n    });\n  };\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","checkAuthTimeout","expirationTime","dispatch","setTimeout","logout","authFail","error","AUTH_FAILED","logoutSuccess","data","AUTH_LOGOUT","localStorage","removeItem","url","post","then","res","console","log","catch","err","response","signup","username","email","password1","password2","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","expirationDate","Date","getTime","setItem","key","login","password","authData","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH"],"mappings":"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","sourcesContent":["import axios from \"../../axios/auth\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error\n  };\n};\n\nexport const logoutSuccess = data => {\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n    data: data\n  };\n};\n\nexport const logout = () => {\n  return dispatch => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationDate\");\n    localStorage.removeItem(\"userId\");\n    const url = \"logout/\";\n    axios\n      .post(url)\n      .then(res => {\n        console.log(res.data);\n        dispatch(logoutSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(authFail(err.response.data));\n      });\n  };\n};\n\nexport const signup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var raw = JSON.stringify({\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    });\n\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };\n\n    fetch(\"http://127.0.0.1:8000/rest-auth/registration/\", requestOptions)\n      .then(res => {\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n\n        localStorage.setItem(\"token\", res.data.key);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        localStorage.setItem(\"userId\", email);\n        dispatch(authSuccess(res.data.key, email));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => dispatch(authFail(err)));\n  };\n};\n\n// export const signupSuccess= () => {\n//   return {\n//     action: actionTypes.AUTH_SIGNUP_SUCCESS\n//   }\n// }\n\n// export const signupFailed= (error) => {\n//   return {\n//     action: actionTypes.AUTH_SIGNUP_FAILED,\n//     error: error,\n//   }\n// }\n\nexport const login = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      username: \"\",\n      email: email,\n      password: password\n    };\n    let url = \"login/\";\n    axios\n      .post(url, authData)\n      .then(res => {\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n\n        localStorage.setItem(\"token\", res.data.key);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        localStorage.setItem(\"userId\", email);\n        dispatch(authSuccess(res.data.key, email));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err.response.data));\n      });\n  };\n};\n\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\n"]},"metadata":{},"sourceType":"module"}