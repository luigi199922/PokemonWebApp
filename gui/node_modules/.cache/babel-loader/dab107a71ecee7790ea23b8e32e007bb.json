{"ast":null,"code":"import axios from \"../../axios/auth\";\nimport * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error\n  };\n};\nexport const logoutSuccess = data => {\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n    data: data\n  };\n};\nexport const logoutFail = error => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    const url = 'logout/';\n    axios.post(url).then(res => {\n      dispatch(logoutSuccess(res.data));\n    }).catch(err => {\n      dispatch(logoutFail(err.response.data));\n    });\n  };\n};\nexport const signup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    };\n    let url = \"registration/\";\n    axios.post(url, authData).then(res => {\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", res.data.key);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      localStorage.setItem(\"userId\", email);\n      dispatch(authSuccess(res.data.key, email));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err.response.data));\n    });\n  };\n};\nexport const login = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      username: \"\",\n      email: email,\n      password: password\n    };\n    let url = \"login/\";\n    axios.post(url, authData).then(res => {\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", res.data.key);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      localStorage.setItem(\"userId\", email);\n      dispatch(authSuccess(res.data.key, email));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err.response.data));\n    });\n  };\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","checkAuthTimeout","expirationTime","dispatch","setTimeout","logout","authFail","error","AUTH_FAILED","logoutSuccess","data","AUTH_LOGOUT","logoutFail","localStorage","removeItem","url","post","then","res","catch","err","response","signup","username","email","password1","password2","authData","expirationDate","Date","getTime","setItem","key","login","password","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH"],"mappings":"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","sourcesContent":["import axios from \"../../axios/auth\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAILED,\n        error: error\n    }\n}\n\nexport const logoutSuccess = (data) => {\n    return {\n        type: actionTypes.AUTH_LOGOUT,\n        data: data,\n    }\n}\n\nexport const logoutFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAILED,\n        error: error,\n    }\n}\n\nexport const logout = () => {\n    return dispatch =>{\n        localStorage.removeItem('token')\n        localStorage.removeItem('expirationDate')\n        localStorage.removeItem('userId')\n        const url = 'logout/'\n        axios\n          .post(url)\n          .then(res => {\n            dispatch(logoutSuccess(res.data));\n          })\n          .catch(err => {\n            dispatch(logoutFail(err.response.data));\n          });\n    } \n}\n\nexport const signup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    };\n    let url = \"registration/\";\n    axios\n      .post(url, authData)\n      .then(res => {\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n\n        localStorage.setItem(\"token\", res.data.key);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        localStorage.setItem(\"userId\", email);\n        dispatch(authSuccess(res.data.key, email));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err.response.data));\n      });\n  };\n};\n\nexport const login = ( email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      username: \"\",\n      email: email,\n      password: password,\n    };\n    let url = \"login/\";\n    axios\n      .post(url, authData)\n      .then(res => {\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n\n        localStorage.setItem(\"token\", res.data.key);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        localStorage.setItem(\"userId\", email);\n        dispatch(authSuccess(res.data.key, email));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err.response.data));\n      });\n  };\n};\n\nexport const setAuthRedirectPath = path => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    }\n}\n"]},"metadata":{},"sourceType":"module"}