{"ast":null,"code":"var _jsxFileName = \"/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/containers/PokeList/PokeList.js\";\nimport React, { Component } from \"react\";\nimport PageManager from '../../components/PageManager/PageManager';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport PokeCard from '../PokeCard/PokeCard';\nimport Modal from '../../components/Modal/Modal';\nimport Backdrop from '../../components/Backdrop/Backdrop';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass PokeList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      displaymodal: false\n    };\n\n    this.onViewModal = pokemon => {\n      this.props.onQuickViewPokemon(pokemon); // this.setState({displayModal: true})\n    };\n\n    this.onRemoveModal = () => {\n      this.props.onRemoveModal(); // this.setState({displayModal: false})\n    };\n  }\n\n  componentDidMount() {\n    this.props.getPokemon(this.props.pkm.offset, this.props.pkm.limit);\n  }\n\n  detailViewHandler(pokemon) {\n    this.props.history.push('pokemon/' + pokemon);\n  }\n\n  render() {\n    let PokemonList = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n\n    if (this.props.pkm.pokemons) {\n      PokemonList = this.props.pkm.pokemons.map((pokemon, key) => {\n        return React.createElement(PokeCard, {\n          url: pokemon.url,\n          pokemon: pokemon,\n          key: pokemon.name,\n          data: pokemon,\n          showModal: this.onViewModal,\n          pokemonSelect: () => this.detailViewHandler(pokemon.name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        });\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row container-fluid mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, PokemonList), React.createElement(PageManager, {\n      lower: this.props.pkm.offset,\n      upper: 964,\n      next: () => this.props.nextPage(this.props.pkm.offset, this.props.pkm.limit),\n      previous: () => this.props.previousPage(this.props.pkm.offset, this.props.pkm.limit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), this.props.displayModal ? React.createElement(Modal, {\n      closed: this.onRemoveModal,\n      show: this.props.displayModal,\n      pokemon: this.props.pkm.pokemon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }) : null, this.props.displayModal ? React.createElement(Backdrop, {\n      show: this.props.displayModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nconst mapStateToProp = state => {\n  return {\n    pkm: state.pokemon,\n    displayModal: state.pokemon.displayModal\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPokemon: (upperBound, lowerBound) => dispatch(actions.fetchPokemonList(upperBound, lowerBound)),\n    nextPage: (upperBound, lowerBound) => dispatch(actions.nextPokemonPage(upperBound, lowerBound)),\n    previousPage: (upperBound, lowerBound) => dispatch(actions.previousPokemonPage(upperBound, lowerBound)),\n    onQuickViewPokemon: pokemon => dispatch(actions.addPokemonToState(pokemon)),\n    onRemoveModal: () => dispatch(actions.removePokemonFromState())\n  };\n};\n\nexport default connect(mapStateToProp, mapDispatchToProps)(PokeList);","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/containers/PokeList/PokeList.js"],"names":["React","Component","PageManager","connect","actions","PokeCard","Modal","Backdrop","Spinner","PokeList","state","loading","displaymodal","onViewModal","pokemon","props","onQuickViewPokemon","onRemoveModal","componentDidMount","getPokemon","pkm","offset","limit","detailViewHandler","history","push","render","PokemonList","pokemons","map","key","url","name","nextPage","previousPage","displayModal","mapStateToProp","mapDispatchToProps","dispatch","upperBound","lowerBound","fetchPokemonList","nextPokemonPage","previousPokemonPage","addPokemonToState","removePokemonFromState"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport PageManager from '../../components/PageManager/PageManager'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions/index'\nimport PokeCard from '../PokeCard/PokeCard'\nimport Modal from '../../components/Modal/Modal'\nimport Backdrop from '../../components/Backdrop/Backdrop'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nclass PokeList extends Component{\n    state = {\n        loading: true,\n        displaymodal: false,\n    }\n\n    componentDidMount(){\n        this.props.getPokemon(this.props.pkm.offset, this.props.pkm.limit)\n    }\n    detailViewHandler(pokemon){\n        this.props.history.push('pokemon/' + pokemon)\n    }\n\n    onViewModal = (pokemon) =>{\n        this.props.onQuickViewPokemon(pokemon)\n        // this.setState({displayModal: true})\n    }\n    onRemoveModal = () =>{\n        this.props.onRemoveModal()\n        // this.setState({displayModal: false})\n    }\n\n    render(){\n        let PokemonList = <Spinner />\n        if(this.props.pkm.pokemons){\n            PokemonList = this.props.pkm.pokemons.map((pokemon, key) =>{\n                return <PokeCard\n                url={pokemon.url}\n                pokemon={pokemon}\n                key={pokemon.name}\n                data={pokemon}\n                showModal={this.onViewModal}\n                pokemonSelect={() => this.detailViewHandler(pokemon.name)}\n                />\n            })\n        }\n        return (\n            <div>\n                <div className=\"row container-fluid mx-auto\">  \n                    {PokemonList}       \n                </div>  \n                <PageManager \n                    lower={this.props.pkm.offset}\n                    upper={964}\n                    next={() => this.props.nextPage(this.props.pkm.offset, this.props.pkm.limit)}\n                    previous={() => this.props.previousPage(this.props.pkm.offset, this.props.pkm.limit)}/>\n                {this.props.displayModal ? <Modal closed={this.onRemoveModal} show={this.props.displayModal} pokemon={this.props.pkm.pokemon}/> : null}\n                {this.props.displayModal ? <Backdrop show={this.props.displayModal} /> : null}\n            </div>\n        )\n    }\n\n\n}\n\nconst mapStateToProp = state =>{\n    return{\n        pkm : state.pokemon,\n        displayModal : state.pokemon.displayModal,\n\n    }\n}\nconst mapDispatchToProps = dispatch =>{\n    return{\n        getPokemon: (upperBound, lowerBound) => dispatch(actions.fetchPokemonList(upperBound, lowerBound)),\n        nextPage: (upperBound, lowerBound) => dispatch(actions.nextPokemonPage(upperBound, lowerBound)),\n        previousPage: (upperBound, lowerBound) => dispatch(actions.previousPokemonPage(upperBound, lowerBound)),\n        onQuickViewPokemon : (pokemon) => dispatch(actions.addPokemonToState(pokemon)),\n        onRemoveModal : () => dispatch(actions.removePokemonFromState()),\n    }\n}\n\nexport default connect(mapStateToProp,mapDispatchToProps)(PokeList);"]},"metadata":{},"sourceType":"module"}