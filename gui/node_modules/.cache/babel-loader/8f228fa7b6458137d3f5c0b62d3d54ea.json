{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility'; // import { setUserInformation } from '../actions/auth'\n\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false,\n  authRedirectPath: '/',\n  userData: {}\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    userData: action.userData,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    userId: null\n  });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, {\n    authRedirectPath: action.path\n  });\n};\n\nconst setUserInformationInGlobalState = (state, action) => {\n  return updateObject(state, {\n    userData: action.userData\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAILED:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n\n    case actionTypes.SET_USER_INFORMATION:\n      return setUserInformationInGlobalState(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/reducers/auth.js"],"names":["actionTypes","updateObject","initialState","token","error","loading","authRedirectPath","userData","authStart","state","action","authSuccess","authFail","authLogout","userId","setAuthRedirectPath","path","setUserInformationInGlobalState","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAILED","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","SET_USER_INFORMATION"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA8B,sBAA9B,C,CACA;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,OAAO,EAAE,KAHQ;AAIjBC,EAAAA,gBAAgB,EAAE,GAJD;AAKjBC,EAAAA,QAAQ,EAAE;AALO,CAArB;;AAOA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,SAAOT,YAAY,CAAGQ,KAAH,EAAU;AAACL,IAAAA,KAAK,EAAE,IAAR;AAAcC,IAAAA,OAAO,EAAE;AAAvB,GAAV,CAAnB;AACH,CAFD;;AAGA,MAAMM,WAAW,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACnC,SAAOT,YAAY,CAAEQ,KAAF,EAAS;AACxBN,IAAAA,KAAK,EAAEO,MAAM,CAACP,KADU;AAExBI,IAAAA,QAAQ,EAAEG,MAAM,CAACH,QAFO;AAGxBH,IAAAA,KAAK,EAAE,IAHiB;AAIxBC,IAAAA,OAAO,EAAE;AAJe,GAAT,CAAnB;AAMH,CAPD;;AAQA,MAAMO,QAAQ,GAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAChC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACvBL,IAAAA,KAAK,EAAEM,MAAM,CAACN,KADS;AAEvBC,IAAAA,OAAO,EAAE;AAFc,GAAR,CAAnB;AAIH,CALD;;AAMA,MAAMQ,UAAU,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAClC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAACN,IAAAA,KAAK,EAAE,IAAR;AAAcW,IAAAA,MAAM,EAAE;AAAtB,GAAR,CAAnB;AACH,CAFD;;AAGA,MAAMC,mBAAmB,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC3C,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAACH,IAAAA,gBAAgB,EAAEI,MAAM,CAACM;AAA1B,GAAR,CAAnB;AACH,CAFD;;AAGA,MAAMC,+BAA+B,GAAG,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACvD,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAACF,IAAAA,QAAQ,EAAGG,MAAM,CAACH;AAAnB,GAAR,CAAnB;AACH,CAFD;;AAGA,MAAMW,OAAO,GAAG,CAACT,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAmC;AAC/C,UAAOA,MAAM,CAACS,IAAd;AACI,SAAKnB,WAAW,CAACoB,UAAjB;AAA6B,aAAOZ,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AAC7B,SAAKV,WAAW,CAACqB,YAAjB;AAA+B,aAAOV,WAAW,CAACF,KAAD,EAAQC,MAAR,CAAlB;;AAC/B,SAAKV,WAAW,CAACsB,WAAjB;AAA8B,aAAOV,QAAQ,CAACH,KAAD,EAAQC,MAAR,CAAf;;AAC9B,SAAKV,WAAW,CAACuB,WAAjB;AAA8B,aAAOV,UAAU,CAACJ,KAAD,EAAQC,MAAR,CAAjB;;AAC9B,SAAKV,WAAW,CAACwB,sBAAjB;AAAyC,aAAOT,mBAAmB,CAACN,KAAD,EAAOC,MAAP,CAA1B;;AACzC,SAAKV,WAAW,CAACyB,oBAAjB;AAAuC,aAAOR,+BAA+B,CAACR,KAAD,EAAQC,MAAR,CAAtC;;AACvC;AACA,aAAOD,KAAP;AARJ;AAUH,CAXD;;AAaA,eAAeS,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\nimport { updateObject }  from '../../shared/utility'\n// import { setUserInformation } from '../actions/auth'\n\nconst initialState = {\n    token: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/',\n    userData: {},\n}\nconst authStart = (state, action) => {\n    return updateObject ( state, {error: null, loading: true})\n}\nconst authSuccess = (state, action) => {\n    return updateObject( state, {\n        token: action.token,\n        userData: action.userData,\n        error: null,\n        loading: false\n    })\n}\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    })\n}\nconst authLogout = (state, action) => {\n    return updateObject(state, {token: null, userId: null})\n}\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, {authRedirectPath: action.path})\n}\nconst setUserInformationInGlobalState = (state, action) => {\n    return updateObject(state, {userData : action.userData})\n}\nconst reducer = (state = initialState, action ) => {\n    switch(action.type){\n        case actionTypes.AUTH_START: return authStart(state, action)\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action)\n        case actionTypes.AUTH_FAILED: return authFail(state, action)\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action)\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action)\n        case actionTypes.SET_USER_INFORMATION: return setUserInformationInGlobalState(state, action)\n        default:\n        return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}