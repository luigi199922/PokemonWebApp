{"ast":null,"code":"var _jsxFileName = \"/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/react-poke-api/src/containers/PokeList/PokeList.js\";\nimport React, { Component } from \"react\";\nimport PokemonListCard from '../../components/PokemonListCard/PokemonListCard';\nimport PageManager from '../../components/PageManager/PageManager';\nimport { connect } from 'react-redux';\nimport axios from '../../axios';\nimport * as actions from '../../store/actions/index';\nimport PokeCard from '../PokeCard/PokeCard';\nimport Modal from '../../components/Modal/Modal';\nimport Backdrop from '../../components/Backdrop/Backdrop';\n\nclass Layout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pokemons: [],\n      loading: true,\n      displaymodal: false\n    };\n\n    this.onViewModal = () => {\n      this.setState({\n        displayModal: true\n      });\n    };\n\n    this.onRemoveModal = () => {\n      this.setState({\n        displayModal: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    // axios.get('/?offset=0&limit=48').then(response=>{ //maybe get the page number and add it to the url\n    //     this.setState({\n    //         pokemons: response.data.results,\n    //         loading: false\n    //     })\n    //     console.log(this.state.pokemons)\n    // }).catch(error => {\n    // })\n    this.props.getPokemon();\n  }\n\n  pokemonSelectedHandler(name) {\n    this.props.history.push({\n      pathname: '/pokemon/' + name\n    });\n  }\n\n  render() {\n    let PokemonList = null;\n\n    if (this.state.pkm) {\n      PokemonList = this.state.pkm.map((pokemon, key) => {\n        return React.createElement(PokeCard, {\n          url: pokemon.url,\n          pokemon: pokemon,\n          key: pokemon.name,\n          pokemonSelect: () => this.pokemonSelectedHandler(pokemon.name),\n          showModal: this.onViewModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row container-fluid mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, PokemonList), React.createElement(PageManager, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), this.state.displayModal ? React.createElement(Modal, {\n      closed: this.onRemoveModal,\n      show: this.state.displayModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }) : null, this.state.displayModal ? React.createElement(Backdrop, {\n      show: this.state.displayModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nconst mapStateToProp = state => {\n  return {\n    pkm: state.pokemon\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPokemon: () => dispatch(actions.fetchPokemon())\n  };\n};\n\nexport default connect(mapStateToProp, mapDispatchToProps)(Layout);","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/react-poke-api/src/containers/PokeList/PokeList.js"],"names":["React","Component","PokemonListCard","PageManager","connect","axios","actions","PokeCard","Modal","Backdrop","Layout","state","pokemons","loading","displaymodal","onViewModal","setState","displayModal","onRemoveModal","componentDidMount","props","getPokemon","pokemonSelectedHandler","name","history","push","pathname","render","PokemonList","pkm","map","pokemon","key","url","mapStateToProp","mapDispatchToProps","dispatch","fetchPokemon"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport PokemonListCard from '../../components/PokemonListCard/PokemonListCard'\nimport PageManager from '../../components/PageManager/PageManager'\nimport { connect } from 'react-redux'\nimport axios from '../../axios'\nimport * as actions from '../../store/actions/index'\nimport PokeCard from '../PokeCard/PokeCard'\nimport Modal from '../../components/Modal/Modal'\nimport Backdrop from '../../components/Backdrop/Backdrop'\n\nclass Layout extends Component{\n    state = {\n        pokemons: [],\n        loading: true,\n        displaymodal: false,\n    }\n\n    componentDidMount(){\n        // axios.get('/?offset=0&limit=48').then(response=>{ //maybe get the page number and add it to the url\n        //     this.setState({\n        //         pokemons: response.data.results,\n        //         loading: false\n        //     })\n        //     console.log(this.state.pokemons)\n        // }).catch(error => {\n\n        // })\n        this.props.getPokemon()\n    }\n\n    pokemonSelectedHandler(name){\n        this.props.history.push({pathname: '/pokemon/' + name})\n    }\n\n    onViewModal = () =>{\n        this.setState({displayModal: true})\n    }\n    onRemoveModal = () =>{\n        this.setState({displayModal: false})\n    }\n\n    render(){\n        let PokemonList = null\n        if(this.state.pkm){\n            PokemonList = this.state.pkm.map((pokemon, key) =>{\n                return <PokeCard\n                url={pokemon.url}\n                pokemon={pokemon}\n                key={pokemon.name}\n                pokemonSelect={()=>this.pokemonSelectedHandler(pokemon.name)}\n                showModal={this.onViewModal}\n                />\n            })\n        }\n        return (\n            <div>\n                <div className=\"row container-fluid mx-auto\">  \n                    {PokemonList}       \n                </div>  \n                <PageManager />\n                {this.state.displayModal ? <Modal closed={this.onRemoveModal} show={this.state.displayModal} /> : null}\n                {this.state.displayModal ? <Backdrop show={this.state.displayModal} /> : null}\n            </div>\n        )\n    }\n\n\n}\n\nconst mapStateToProp = state =>{\n    return{\n        pkm : state.pokemon,\n    }\n}\nconst mapDispatchToProps = dispatch =>{\n    return{\n        getPokemon: () => dispatch(actions.fetchPokemon()),\n    }\n}\n\nexport default connect(mapStateToProp,mapDispatchToProps)(Layout);"]},"metadata":{},"sourceType":"module"}