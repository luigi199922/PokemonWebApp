{"ast":null,"code":"import * as actions from \"./actionTypes\";\nexport const fetchPokemonList = (offset, limit) => {\n  return {\n    type: actions.FETCH_POKEMON_LIST,\n    offset: offset,\n    limit: limit\n  };\n};\nexport const fetchPokemonFailed = () => {\n  return {\n    type: actions.FETCH_POKEMON_FAILED\n  };\n};\nexport const addPokemonToState = pokemon => {\n  return {\n    type: actions.ADD_POKEMON_TO_STATE,\n    pokemon: pokemon\n  };\n};\nexport const fetchPokemonSuccess = (pokemonArray, lowerBound, upperBound) => {\n  return {\n    type: actions.FETCH_POKEMON_SUCCESS,\n    pokemon: pokemonArray,\n    lower: lowerBound,\n    upper: upperBound\n  };\n};\nexport const fetchPokemonById = id => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID,\n    id: id\n  };\n};\nexport const fetchPokemonByIdSuccess = pokemon => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_SUCCESS,\n    pokemon: pokemon\n  };\n};\nexport const fetchPokemonByIdFailed = err => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_FAILED,\n    error: err\n  };\n};\nexport const removePokemonFromState = () => {\n  return {\n    type: actions.REMOVE_POKEMON_FROM_STATE\n  };\n};\nexport const getUserFavoritePokemon = (userId, token) => {\n  return {\n    type: actions.FETCH_POKEMON_BY_USER_FAVORITE,\n    userId: userId,\n    token: token\n  };\n};\nexport const getUserFavoritePokemonSuccess = pokemonArray => {\n  return {\n    type: actions.GET_USER_FAVORITE_POKEMON_SUCCESS,\n    pokemon: pokemonArray\n  };\n};\nexport const getUserFavoritePokemonFailed = error => {\n  return {\n    type: actions.GET_USER_FAVORITE_POKEMON_FAILED,\n    error: error\n  };\n};\nexport const nextPokemonPage = (offset, limit) => {\n  const newOffset = offset + 20;\n  return fetchPokemonList(newOffset, limit);\n};\nexport const previousPokemonPage = (offset, limit) => {\n  const newOffset = offset - 20;\n  return fetchPokemonList(newOffset, limit);\n};\nexport const addPokemonUserFavorite = (id, name, token) => {\n  return {\n    type: actions.ADD_POKEMON_USER_FAVORITE,\n    id: id,\n    name: name,\n    token: token\n  };\n};","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/actions/pokemon.js"],"names":["actions","fetchPokemonList","offset","limit","type","FETCH_POKEMON_LIST","fetchPokemonFailed","FETCH_POKEMON_FAILED","addPokemonToState","pokemon","ADD_POKEMON_TO_STATE","fetchPokemonSuccess","pokemonArray","lowerBound","upperBound","FETCH_POKEMON_SUCCESS","lower","upper","fetchPokemonById","id","FETCH_POKEMON_BY_ID","fetchPokemonByIdSuccess","FETCH_POKEMON_BY_ID_SUCCESS","fetchPokemonByIdFailed","err","FETCH_POKEMON_BY_ID_FAILED","error","removePokemonFromState","REMOVE_POKEMON_FROM_STATE","getUserFavoritePokemon","userId","token","FETCH_POKEMON_BY_USER_FAVORITE","getUserFavoritePokemonSuccess","GET_USER_FAVORITE_POKEMON_SUCCESS","getUserFavoritePokemonFailed","GET_USER_FAVORITE_POKEMON_FAILED","nextPokemonPage","newOffset","previousPokemonPage","addPokemonUserFavorite","name","ADD_POKEMON_USER_FAVORITE"],"mappings":"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","sourcesContent":["import * as actions from \"./actionTypes\";\n\nexport const fetchPokemonList = (offset, limit) => {\n  return {\n    type: actions.FETCH_POKEMON_LIST,\n    offset: offset,\n    limit: limit,\n  };\n};\nexport const fetchPokemonFailed = () => {\n  return {\n    type: actions.FETCH_POKEMON_FAILED,\n  };\n};\nexport const addPokemonToState = (pokemon) => {\n  return {\n    type: actions.ADD_POKEMON_TO_STATE,\n    pokemon: pokemon,\n  };\n};\n\nexport const fetchPokemonSuccess = (pokemonArray, lowerBound, upperBound) => {\n  return {\n    type: actions.FETCH_POKEMON_SUCCESS,\n    pokemon: pokemonArray,\n    lower: lowerBound,\n    upper: upperBound,\n  };\n};\n\nexport const fetchPokemonById = (id) => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID,\n    id: id,\n  };\n};\nexport const fetchPokemonByIdSuccess = (pokemon) => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_SUCCESS,\n    pokemon: pokemon,\n  };\n};\nexport const fetchPokemonByIdFailed = (err) => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_FAILED,\n    error: err,\n  };\n};\n\nexport const removePokemonFromState = () => {\n  return {\n    type: actions.REMOVE_POKEMON_FROM_STATE,\n  };\n};\n\nexport const getUserFavoritePokemon = (userId, token) => {\n  return {\n    type: actions.FETCH_POKEMON_BY_USER_FAVORITE,\n    userId: userId,\n    token: token,\n  };\n};\n\nexport const getUserFavoritePokemonSuccess = (pokemonArray) => {\n  return {\n    type: actions.GET_USER_FAVORITE_POKEMON_SUCCESS,\n    pokemon: pokemonArray,\n  };\n};\n\nexport const getUserFavoritePokemonFailed = (error) => {\n  return {\n    type: actions.GET_USER_FAVORITE_POKEMON_FAILED,\n    error: error,\n  };\n};\n\nexport const nextPokemonPage = (offset, limit) => {\n  const newOffset = offset + 20;\n  return fetchPokemonList(newOffset, limit);\n};\n\nexport const previousPokemonPage = (offset, limit) => {\n  const newOffset = offset - 20;\n  return fetchPokemonList(newOffset, limit);\n};\n\nexport const addPokemonUserFavorite = (id, name,token) => {\n  return {\n    type: actions.ADD_POKEMON_USER_FAVORITE,\n    id: id,\n    name: name,\n    token: token,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}