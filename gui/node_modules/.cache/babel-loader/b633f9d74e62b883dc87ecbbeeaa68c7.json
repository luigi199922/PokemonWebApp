{"ast":null,"code":"var _jsxFileName = \"/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/components/Pokemon/Pokemon.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport classes from './Pokemon.module.css';\nimport { TYPE_COLOR } from './PokemonConstants';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nclass Pokemon extends Component {\n  componentDidMount() {\n    console.log(this.props.params.id);\n    this.props.onLoadPokemon(this.props.match.params.id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: classes.Pokemon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.Card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.CardHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.Col2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.Id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, this.props.id))), React.createElement(\"div\", {\n      className: classes.Col10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.Types,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.props.types.map(type => React.createElement(\"span\", {\n      key: type,\n      className: \"badge badge-primary badge-pill mr-1\",\n      style: {\n        backgroundColor: `${TYPE_COLOR[type]}`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, type.toLowerCase().split(' ').map(letter => letter.charAt(0).toUpperCase() + letter.substring(1)))))))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.imageURL,\n      className: \"card-img-top rounded mx-auto mt-2\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.name.toLowerCase().split(' ').map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))), this.props.stats.map((stat, key) => React.createElement(\"div\", {\n      key: key,\n      className: \"row align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, stat.stat.name)), React.createElement(\"div\", {\n      className: \"col-md-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"progress-bar\" //  role=\"progressBar\"\n      ,\n      style: {\n        width: `${stat.base_stat}%`\n      },\n      \"aria-valuenow\": \"50\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, stat.base_stat)))))))), React.createElement(\"div\", {\n      className: \"row align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Attributes\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Height: \", this.props.height), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Weight: \", this.props.weight)), React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Abilities\"), this.props.abilities.map((ability, key) => {\n      return React.createElement(\"p\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, ability.ability.name);\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Base Experience: \", this.props.base_experience))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pkm: props.pokemon.pokemon\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLoadPokemon: id => dispatch(actions.fetchPokemonById(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pokemon);","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/components/Pokemon/Pokemon.js"],"names":["React","Component","axios","classes","TYPE_COLOR","connect","actions","Pokemon","componentDidMount","console","log","props","params","id","onLoadPokemon","match","render","Card","CardHeader","Row","Col2","Id","Col10","Types","types","map","type","backgroundColor","toLowerCase","split","letter","charAt","toUpperCase","substring","imageURL","name","stats","stat","key","width","base_stat","height","weight","abilities","ability","base_experience","mapStateToProps","state","pkm","pokemon","mapDispatchToProps","dispatch","fetchPokemonById"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport axios from 'axios'\nimport classes from './Pokemon.module.css'\nimport {TYPE_COLOR} from './PokemonConstants'\nimport {connect} from 'react-redux'\nimport * as actions from '../../store/actions/index'\n\nclass Pokemon  extends Component { \n\n    componentDidMount(){\n        console.log(this.props.params.id)\n        this.props.onLoadPokemon(this.props.match.params.id)\n    }\n\n    render(){\n        return (\n            <div className={classes.Pokemon}>\n                <div className={classes.Card}> \n                    <div className={classes.CardHeader}> \n                        <div className={classes.Row}>\n                            <div className={classes.Col2}>\n                                <div className={classes.Id}>\n                                <h5>{this.props.id}</h5>\n                                </div>\n                            </div>\n                            <div className={classes.Col10}>\n                                <div className={classes.Types}>\n                                    {this.props.types.map((type) => (\n                                        <span\n                                        key={type}\n                                        className='badge badge-primary badge-pill mr-1'\n                                        style={{backgroundColor: `${TYPE_COLOR[type]}`}}\n                                        >\n                                            {type.toLowerCase().split(' ').map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))}\n                                        </span>\n                                    ))\n                                    }\n                                </div>\n                            </div>                            \n                        </div>                 \n                    </div>\n                    <div className=\"card-body\">                \n                        <div className=\"row align-items-center\" >\n                            <div className=\"col-md-3\">\n                                <img  src={this.props.imageURL} className='card-img-top rounded mx-auto mt-2' alt=\"\" />\n                            </div>\n                            <div className=\"col-md-9\">\n                                    <h4 className=\"mx-auto\">{this.props.name.toLowerCase().split(' ').map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))}</h4>                       \n                                    {this.props.stats.map((stat,key) =>                                \n                                 <div key ={key} className=\"row align-items-center\">\n                                 <div className=\"col-md-3\">\n                                     <p>{stat.stat.name}</p>\n                                </div>                               \n                                <div className=\"col-md-9\">\n                                         <div className=\"progress\">\n                                             <div className=\"progress-bar\"\n                                            //  role=\"progressBar\"\n                                             style={{\n                                                 width: `${stat.base_stat}%`\n                                             }}\n                                             aria-valuenow=\"50\"\n                                             aria-valuemin=\"0\"\n                                             aria-valuemax=\"100\"\n                                             >\n                                             <small>\n                                                 {stat.base_stat}\n                                             </small>\n                                             </div>\n                                         </div>\n                                    </div>\n                                     \n                                 </div>\n                                 \n                                 )}\n\n                                \n                            </div>\n                        </div>\n                        <div className=\"row align-items-center\">\n                            <div className=\"col-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-6 \">\n                                            <br/>\n                                            <strong>Attributes</strong>\n                                            <p>Height: {this.props.height}</p>\n                                            <p>Weight: {this.props.weight}</p>\n                                        \n                                    </div>\n                                    <div className=\"col-6\">\n                                        <strong>Abilities</strong>\n                                            {this.props.abilities.map((ability,key) =>{\n                                            return <p key={key}>{ability.ability.name}</p>\n                                            })}\n                                        <p>Base Experience: {this.props.base_experience}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>          \n            </div>          \n        )\n    }\n   \n}\nconst mapStateToProps = state =>{\n    return {\n        pkm : props.pokemon.pokemon\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLoadPokemon: (id) => dispatch(actions.fetchPokemonById(id)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Pokemon)\n"]},"metadata":{},"sourceType":"module"}