{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../../shared/utility\"; // import { setUserInformation } from '../actions/auth'\n\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false,\n  authRedirectPath: \"/\",\n  userData: {},\n  userFavorite: []\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  const pokemonIdArray = [];\n  action.userData.favoritePokemon.forEach(pokemon => {\n    pokemonIdArray.push(pokemon.pokemonId);\n  });\n  action.userData.favoritePokemon = pokemonIdArray;\n  return updateObject(state, {\n    token: action.token,\n    userData: action.userData,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    userId: null\n  });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, {\n    authRedirectPath: action.path\n  });\n};\n\nconst setUserInformationInGlobalState = (state, action) => {\n  return updateObject(state, {\n    userData: action.userData\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAILED:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.AUTH_SET_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n\n    case actionTypes.SET_USER_INFORMATION:\n      return setUserInformationInGlobalState(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/reducers/auth.js"],"names":["actionTypes","updateObject","initialState","token","error","loading","authRedirectPath","userData","userFavorite","authStart","state","action","authSuccess","pokemonIdArray","favoritePokemon","forEach","pokemon","push","pokemonId","authFail","authLogout","userId","setAuthRedirectPath","path","setUserInformationInGlobalState","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAILED","AUTH_LOGOUT","AUTH_SET_REDIRECT_PATH","SET_USER_INFORMATION"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../../shared/utility\";\n// import { setUserInformation } from '../actions/auth'\n\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false,\n  authRedirectPath: \"/\",\n  userData: {},\n  userFavorite: [],\n};\nconst authStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\nconst authSuccess = (state, action) => {\n  const pokemonIdArray = [];\n  action.userData.favoritePokemon.forEach((pokemon) => {\n    pokemonIdArray.push(pokemon.pokemonId);\n  });\n  action.userData.favoritePokemon = pokemonIdArray\n  \n  return updateObject(state, {\n    token: action.token,\n    userData: action.userData,\n    error: null,\n    loading: false,\n  });\n};\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n  });\n};\nconst authLogout = (state, action) => {\n  return updateObject(state, { token: null, userId: null });\n};\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, { authRedirectPath: action.path });\n};\nconst setUserInformationInGlobalState = (state, action) => {\n  return updateObject(state, { userData: action.userData });\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAILED:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    case actionTypes.AUTH_SET_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n    case actionTypes.SET_USER_INFORMATION:\n      return setUserInformationInGlobalState(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}