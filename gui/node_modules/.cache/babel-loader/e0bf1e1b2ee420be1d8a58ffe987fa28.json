{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userData) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userData: userData\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return {\n    type: actionTypes.AUTH_CHECK_TIMEOUT,\n    expirationTime: expirationTime\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error\n  };\n};\nexport const logoutSuccess = data => {\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n    data: data\n  };\n};\nexport const logout = token => {\n  return {\n    type: actionTypes.AUTH_USER_LOGOUT,\n    token: token\n  };\n};\nexport const signup = (username, email, password1, password2) => {\n  return {\n    type: actionTypes.AUTH_USER_SIGNUP,\n    username: username,\n    email: email,\n    password1: password1,\n    password2: password2\n  };\n};\nexport const login = (email, password) => {\n  return {\n    type: actionTypes.AUTH_LOGIN,\n    email: email,\n    password: password\n  };\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.AUTH_SET_REDIRECT_PATH,\n    path: path\n  };\n};\nexport const getUserCredentials = token => {\n  return {\n    type: actionTypes.AUTH_GET_USER_CREDENTIALS,\n    token: token\n  };\n};\nexport const setUserInformation = userData => {\n  return {\n    type: actionTypes.SET_USER_INFORMATION,\n    userData: userData\n  };\n};\nexport const authCheckState = () => {\n  return {\n    type: actionTypes.AUTH_CHECK_STATE\n  };\n};","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/actions/auth.js"],"names":["actionTypes","authStart","type","AUTH_START","authSuccess","token","userData","AUTH_SUCCESS","checkAuthTimeout","expirationTime","AUTH_CHECK_TIMEOUT","authFail","error","AUTH_FAILED","logoutSuccess","data","AUTH_LOGOUT","logout","AUTH_USER_LOGOUT","signup","username","email","password1","password2","AUTH_USER_SIGNUP","login","password","AUTH_LOGIN","setAuthRedirectPath","path","AUTH_SET_REDIRECT_PATH","getUserCredentials","AUTH_GET_USER_CREDENTIALS","setUserInformation","SET_USER_INFORMATION","authCheckState","AUTH_CHECK_STATE"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEF,WAAW,CAACG;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC9C,SAAO;AACLJ,IAAAA,IAAI,EAAEF,WAAW,CAACO,YADb;AAELF,IAAAA,KAAK,EAAEA,KAFF;AAGLC,IAAAA,QAAQ,EAAEA;AAHL,GAAP;AAKD,CANM;AAQP,OAAO,MAAME,gBAAgB,GAAGC,cAAc,IAAI;AACjD,SAAO;AACLP,IAAAA,IAAI,EAAGF,WAAW,CAACU,kBADd;AAELD,IAAAA,cAAc,EAAEA;AAFX,GAAP;AAKA,CANM;AAQP,OAAO,MAAME,QAAQ,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLV,IAAAA,IAAI,EAAEF,WAAW,CAACa,WADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAME,aAAa,GAAGC,IAAI,IAAI;AACnC,SAAO;AACLb,IAAAA,IAAI,EAAEF,WAAW,CAACgB,WADb;AAELD,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALM;AAOP,OAAO,MAAME,MAAM,GAAIZ,KAAD,IAAW;AAC/B,SAAO;AACLH,IAAAA,IAAI,EAAEF,WAAW,CAACkB,gBADb;AAELb,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAMc,MAAM,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,SAAlB,EAA6BC,SAA7B,KAA2C;AAC/D,SAAO;AACLrB,IAAAA,IAAI,EAAEF,WAAW,CAACwB,gBADb;AAELJ,IAAAA,QAAQ,EAAEA,QAFL;AAGLC,IAAAA,KAAK,EAAEA,KAHF;AAILC,IAAAA,SAAS,EAAEA,SAJN;AAKLC,IAAAA,SAAS,EAAEA;AALN,GAAP;AAOD,CARM;AAUP,OAAO,MAAME,KAAK,GAAG,CAACJ,KAAD,EAAQK,QAAR,KAAqB;AACxC,SAAM;AACJxB,IAAAA,IAAI,EAAEF,WAAW,CAAC2B,UADd;AAEJN,IAAAA,KAAK,EAAEA,KAFH;AAGJK,IAAAA,QAAQ,EAAEA;AAHN,GAAN;AAMD,CAPM;AASP,OAAO,MAAME,mBAAmB,GAAGC,IAAI,IAAI;AACzC,SAAO;AACL3B,IAAAA,IAAI,EAAEF,WAAW,CAAC8B,sBADb;AAELD,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALM;AAOP,OAAO,MAAME,kBAAkB,GAAI1B,KAAD,IAAW;AAC3C,SAAO;AACLH,IAAAA,IAAI,EAAEF,WAAW,CAACgC,yBADb;AAEL3B,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAM4B,kBAAkB,GAAG3B,QAAQ,IAAI;AAC5C,SAAO;AACLJ,IAAAA,IAAI,EAAEF,WAAW,CAACkC,oBADb;AAEL5B,IAAAA,QAAQ,EAAEA;AAFL,GAAP;AAID,CALM;AAOP,OAAO,MAAM6B,cAAc,GAAG,MAAM;AAClC,SAAO;AACLjC,IAAAA,IAAI,EAAEF,WAAW,CAACoC;AADb,GAAP;AAGD,CAJM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (token, userData) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userData: userData,\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n return {\n   type : actionTypes.AUTH_CHECK_TIMEOUT,\n   expirationTime: expirationTime,\n\n }\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error\n  };\n};\n\nexport const logoutSuccess = data => {\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n    data: data\n  };\n};\n\nexport const logout = (token) => {\n  return {\n    type: actionTypes.AUTH_USER_LOGOUT,\n    token: token,\n  }\n};\n\nexport const signup = (username, email, password1, password2) => {\n  return {\n    type: actionTypes.AUTH_USER_SIGNUP,\n    username: username,\n    email: email,\n    password1: password1,\n    password2: password2,\n  }\n};\n\nexport const login = (email, password) => {\n  return{\n    type: actionTypes.AUTH_LOGIN,\n    email: email,\n    password: password,\n\n  }\n};\n\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.AUTH_SET_REDIRECT_PATH,\n    path: path\n  };\n};\n\nexport const getUserCredentials = (token) => {\n  return {\n    type: actionTypes.AUTH_GET_USER_CREDENTIALS,\n    token: token,\n  }\n}\n\nexport const setUserInformation = userData => {\n  return {\n    type: actionTypes.SET_USER_INFORMATION,\n    userData: userData,\n  }\n}\n\nexport const authCheckState = () => {\n  return {\n    type: actionTypes.AUTH_CHECK_STATE\n  }\n}"]},"metadata":{},"sourceType":"module"}