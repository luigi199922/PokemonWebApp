{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nimport { setUserInformation } from '../actions/auth';\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: '/',\n  userData: {}\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    userId: action.userId,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    userId: null\n  });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, {\n    authRedirectPath: action.path\n  });\n};\n\nconst setUserInformationInGlobalState = (state, action) => {\n  return updateObject(state, {\n    userData: action.userData\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAILED:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n\n    case actionTypes.SET_USER_INFORMATION:\n      return setUserInformationInGlobalState(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/reducers/auth.js"],"names":["actionTypes","updateObject","setUserInformation","initialState","token","userId","error","loading","authRedirectPath","userData","authStart","state","action","authSuccess","authFail","authLogout","setAuthRedirectPath","path","setUserInformationInGlobalState","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAILED","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","SET_USER_INFORMATION"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA8B,sBAA9B;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,MAAM,EAAE,IAFS;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,OAAO,EAAE,KAJQ;AAKjBC,EAAAA,gBAAgB,EAAE,GALD;AAMjBC,EAAAA,QAAQ,EAAE;AANO,CAArB;;AAQA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,SAAOX,YAAY,CAAGU,KAAH,EAAU;AAACL,IAAAA,KAAK,EAAE,IAAR;AAAcC,IAAAA,OAAO,EAAE;AAAvB,GAAV,CAAnB;AACH,CAFD;;AAGA,MAAMM,WAAW,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACnC,SAAOX,YAAY,CAAEU,KAAF,EAAS;AACxBP,IAAAA,KAAK,EAAEQ,MAAM,CAACR,KADU;AAExBC,IAAAA,MAAM,EAAEO,MAAM,CAACP,MAFS;AAGxBC,IAAAA,KAAK,EAAE,IAHiB;AAIxBC,IAAAA,OAAO,EAAE;AAJe,GAAT,CAAnB;AAMH,CAPD;;AAQA,MAAMO,QAAQ,GAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAChC,SAAOX,YAAY,CAACU,KAAD,EAAQ;AACvBL,IAAAA,KAAK,EAAEM,MADgB;AAEvBL,IAAAA,OAAO,EAAE;AAFc,GAAR,CAAnB;AAIH,CALD;;AAMA,MAAMQ,UAAU,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAClC,SAAOX,YAAY,CAACU,KAAD,EAAQ;AAACP,IAAAA,KAAK,EAAE,IAAR;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAAR,CAAnB;AACH,CAFD;;AAGA,MAAMW,mBAAmB,GAAG,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC3C,SAAOX,YAAY,CAACU,KAAD,EAAQ;AAACH,IAAAA,gBAAgB,EAAEI,MAAM,CAACK;AAA1B,GAAR,CAAnB;AACH,CAFD;;AAGA,MAAMC,+BAA+B,GAAG,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACvD,SAAOX,YAAY,CAACU,KAAD,EAAQ;AAACF,IAAAA,QAAQ,EAAGG,MAAM,CAACH;AAAnB,GAAR,CAAnB;AACH,CAFD;;AAGA,MAAMU,OAAO,GAAG,CAACR,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAmC;AAC/C,UAAOA,MAAM,CAACQ,IAAd;AACI,SAAKpB,WAAW,CAACqB,UAAjB;AAA6B,aAAOX,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AAC7B,SAAKZ,WAAW,CAACsB,YAAjB;AAA+B,aAAOT,WAAW,CAACF,KAAD,EAAQC,MAAR,CAAlB;;AAC/B,SAAKZ,WAAW,CAACuB,WAAjB;AAA8B,aAAOT,QAAQ,CAACH,KAAD,EAAQC,MAAR,CAAf;;AAC9B,SAAKZ,WAAW,CAACwB,WAAjB;AAA8B,aAAOT,UAAU,CAACJ,KAAD,EAAQC,MAAR,CAAjB;;AAC9B,SAAKZ,WAAW,CAACyB,sBAAjB;AAAyC,aAAOT,mBAAmB,CAACL,KAAD,EAAOC,MAAP,CAA1B;;AACzC,SAAKZ,WAAW,CAAC0B,oBAAjB;AAAuC,aAAOR,+BAA+B,CAACP,KAAD,EAAQC,MAAR,CAAtC;;AACvC;AACA,aAAOD,KAAP;AARJ;AAUH,CAXD;;AAaA,eAAeQ,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\nimport { updateObject }  from '../../shared/utility'\nimport { setUserInformation } from '../actions/auth'\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/',\n    userData: {},\n}\nconst authStart = (state, action) => {\n    return updateObject ( state, {error: null, loading: true})\n}\nconst authSuccess = (state, action) => {\n    return updateObject( state, {\n        token: action.token,\n        userId: action.userId,\n        error: null,\n        loading: false\n    })\n}\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action,\n        loading: false\n    })\n}\nconst authLogout = (state, action) => {\n    return updateObject(state, {token: null, userId: null})\n}\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, {authRedirectPath: action.path})\n}\nconst setUserInformationInGlobalState = (state, action) => {\n    return updateObject(state, {userData : action.userData})\n}\nconst reducer = (state = initialState, action ) => {\n    switch(action.type){\n        case actionTypes.AUTH_START: return authStart(state, action)\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action)\n        case actionTypes.AUTH_FAILED: return authFail(state, action)\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action)\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action)\n        case actionTypes.SET_USER_INFORMATION: return setUserInformationInGlobalState(state, action)\n        default:\n        return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}