{"ast":null,"code":"import * as actions from \"./actionTypes\";\nimport axios from \"../../axios/axios\";\nexport const fetchPokemon = (offset, limit) => {\n  return dispatch => {\n    axios.get(\"/?offset=\" + offset + \"&limit=\" + limit).then(response => {\n      //maybe get the page number and add it to the url\n      dispatch(fetchPokemonSuccess(response.data.results, offset, limit));\n    }).catch(error => {\n      dispatch(fetchPokemonFailed());\n    });\n  };\n};\nexport const fetchPokemonFailed = () => {\n  return {\n    type: actions.FETCH_POKEMON_FAILED\n  };\n};\nexport const addPokemonToState = pokemon => {\n  return {\n    type: actions.ADD_POKEMON_TO_STATE,\n    pokemon: pokemon\n  };\n};\nexport const fetchPokemonSuccess = (pokemonArray, lowerBound, upperBound) => {\n  return {\n    type: actions.FETCH_POKEMON_SUCCESS,\n    pokemon: pokemonArray,\n    lower: lowerBound,\n    upper: upperBound\n  };\n};\nexport const fetchPokemonById = id => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID,\n    id: id\n  };\n};\nexport const fetchPokemonByIdSuccess = pokemon => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_SUCCESS,\n    pokemon: pokemon\n  };\n};\nexport const fetchPokemonByIdFailed = err => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_FAILED,\n    error: err\n  };\n};\nexport const removePokemonFromState = () => {\n  return {\n    type: actions.REMOVE_POKEMON_FROM_STATE\n  };\n};\nexport const getUserFavoritePokemon = id => {\n  return {\n    type: actions.FETCH_POKEMON_BY_USER_FAVORITE,\n    id: id\n  };\n};\nexport const getUserFavoritePokemonSuccess = pokemonArray => {\n  return {\n    type: actions.GET_USER_FAVORITE_POKEMON_SUCCESS,\n    pokemon: pokemonArray\n  };\n};\nexport const getUserFavoritePokemonFailed = error => {\n  return {\n    type: actions.GET_USER_FAVORITE_POKEMON_FAILED,\n    error: error\n  };\n};\nexport const nextPokemonPage = (offset, limit) => {\n  const newOffset = offset + 28;\n  return fetchPokemon(newOffset, limit);\n};\nexport const previousPokemonPage = (offset, limit) => {\n  const newOffset = offset - 28;\n  return fetchPokemon(newOffset, limit);\n};","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/actions/pokemon.js"],"names":["actions","axios","fetchPokemon","offset","limit","dispatch","get","then","response","fetchPokemonSuccess","data","results","catch","error","fetchPokemonFailed","type","FETCH_POKEMON_FAILED","addPokemonToState","pokemon","ADD_POKEMON_TO_STATE","pokemonArray","lowerBound","upperBound","FETCH_POKEMON_SUCCESS","lower","upper","fetchPokemonById","id","FETCH_POKEMON_BY_ID","fetchPokemonByIdSuccess","FETCH_POKEMON_BY_ID_SUCCESS","fetchPokemonByIdFailed","err","FETCH_POKEMON_BY_ID_FAILED","removePokemonFromState","REMOVE_POKEMON_FROM_STATE","getUserFavoritePokemon","FETCH_POKEMON_BY_USER_FAVORITE","getUserFavoritePokemonSuccess","GET_USER_FAVORITE_POKEMON_SUCCESS","getUserFavoritePokemonFailed","GET_USER_FAVORITE_POKEMON_FAILED","nextPokemonPage","newOffset","previousPokemonPage"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAGA,OAAO,MAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC7C,SAAOC,QAAQ,IAAI;AACjBJ,IAAAA,KAAK,CACFK,GADH,CACO,cAAcH,MAAd,GAAuB,SAAvB,GAAmCC,KAD1C,EAEGG,IAFH,CAEQC,QAAQ,IAAI;AAChB;AACAH,MAAAA,QAAQ,CAACI,mBAAmB,CAACD,QAAQ,CAACE,IAAT,CAAcC,OAAf,EAAwBR,MAAxB,EAAgCC,KAAhC,CAApB,CAAR;AACD,KALH,EAMGQ,KANH,CAMSC,KAAK,IAAI;AACdR,MAAAA,QAAQ,CAACS,kBAAkB,EAAnB,CAAR;AACD,KARH;AASD,GAVD;AAWD,CAZM;AAaP,OAAO,MAAMA,kBAAkB,GAAG,MAAM;AACtC,SAAO;AACLC,IAAAA,IAAI,EAAEf,OAAO,CAACgB;AADT,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMC,iBAAiB,GAAGC,OAAO,IAAI;AAC1C,SAAO;AACLH,IAAAA,IAAI,EAAEf,OAAO,CAACmB,oBADT;AAELD,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMT,mBAAmB,GAAG,CAACW,YAAD,EAAeC,UAAf,EAA2BC,UAA3B,KAA0C;AAC3E,SAAO;AACLP,IAAAA,IAAI,EAAEf,OAAO,CAACuB,qBADT;AAELL,IAAAA,OAAO,EAAEE,YAFJ;AAGLI,IAAAA,KAAK,EAAEH,UAHF;AAILI,IAAAA,KAAK,EAAEH;AAJF,GAAP;AAMD,CAPM;AASP,OAAO,MAAMI,gBAAgB,GAAGC,EAAE,IAAI;AACpC,SAAO;AACLZ,IAAAA,IAAI,EAAEf,OAAO,CAAC4B,mBADT;AAELD,IAAAA,EAAE,EAAEA;AAFC,GAAP;AAID,CALM;AAMP,OAAO,MAAME,uBAAuB,GAAGX,OAAO,IAAI;AAChD,SAAO;AACLH,IAAAA,IAAI,EAAEf,OAAO,CAAC8B,2BADT;AAELZ,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,MAAMa,sBAAsB,GAAGC,GAAG,IAAI;AAC3C,SAAO;AACLjB,IAAAA,IAAI,EAAEf,OAAO,CAACiC,0BADT;AAELpB,IAAAA,KAAK,EAAEmB;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAME,sBAAsB,GAAG,MAAM;AAC1C,SAAO;AACLnB,IAAAA,IAAI,EAAEf,OAAO,CAACmC;AADT,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,sBAAsB,GAAGT,EAAE,IAAI;AAC1C,SAAM;AACJZ,IAAAA,IAAI,EAAEf,OAAO,CAACqC,8BADV;AAEJV,IAAAA,EAAE,EAAEA;AAFA,GAAN;AAID,CALM;AAOP,OAAO,MAAMW,6BAA6B,GAAGlB,YAAY,IAAI;AAC3D,SAAO;AACLL,IAAAA,IAAI,EAAEf,OAAO,CAACuC,iCADT;AAELrB,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMoB,4BAA4B,GAAG3B,KAAK,IAAI;AACnD,SAAO;AACLE,IAAAA,IAAI,EAAEf,OAAO,CAACyC,gCADT;AAEL5B,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAM6B,eAAe,GAAG,CAACvC,MAAD,EAASC,KAAT,KAAmB;AAChD,QAAMuC,SAAS,GAAGxC,MAAM,GAAG,EAA3B;AACA,SAAOD,YAAY,CAACyC,SAAD,EAAYvC,KAAZ,CAAnB;AACD,CAHM;AAKP,OAAO,MAAMwC,mBAAmB,GAAG,CAACzC,MAAD,EAASC,KAAT,KAAmB;AACpD,QAAMuC,SAAS,GAAGxC,MAAM,GAAG,EAA3B;AACA,SAAOD,YAAY,CAACyC,SAAD,EAAYvC,KAAZ,CAAnB;AACD,CAHM","sourcesContent":["import * as actions from \"./actionTypes\";\nimport axios from \"../../axios/axios\";\n\n\nexport const fetchPokemon = (offset, limit) => {\n  return dispatch => {\n    axios\n      .get(\"/?offset=\" + offset + \"&limit=\" + limit)\n      .then(response => {\n        //maybe get the page number and add it to the url\n        dispatch(fetchPokemonSuccess(response.data.results, offset, limit));\n      })\n      .catch(error => {\n        dispatch(fetchPokemonFailed());\n      });\n  };\n};\nexport const fetchPokemonFailed = () => {\n  return {\n    type: actions.FETCH_POKEMON_FAILED\n  };\n};\nexport const addPokemonToState = pokemon => {\n  return {\n    type: actions.ADD_POKEMON_TO_STATE,\n    pokemon: pokemon\n  };\n};\n\nexport const fetchPokemonSuccess = (pokemonArray, lowerBound, upperBound) => {\n  return {\n    type: actions.FETCH_POKEMON_SUCCESS,\n    pokemon: pokemonArray,\n    lower: lowerBound,\n    upper: upperBound\n  };\n};\n\nexport const fetchPokemonById = id => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID,\n    id: id\n  };\n};\nexport const fetchPokemonByIdSuccess = pokemon => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_SUCCESS,\n    pokemon: pokemon\n  };\n};\nexport const fetchPokemonByIdFailed = err => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_FAILED,\n    error: err\n  };\n};\n\nexport const removePokemonFromState = () => {\n  return {\n    type: actions.REMOVE_POKEMON_FROM_STATE\n  };\n};\n\nexport const getUserFavoritePokemon = id => {\n  return{\n    type: actions.FETCH_POKEMON_BY_USER_FAVORITE,\n    id: id,\n  }\n};\n\nexport const getUserFavoritePokemonSuccess = pokemonArray => {\n  return {\n    type: actions.GET_USER_FAVORITE_POKEMON_SUCCESS,\n    pokemon: pokemonArray\n  };\n};\n\nexport const getUserFavoritePokemonFailed = error => {\n  return {\n    type: actions.GET_USER_FAVORITE_POKEMON_FAILED,\n    error: error\n  };\n};\n\nexport const nextPokemonPage = (offset, limit) => {\n  const newOffset = offset + 28;\n  return fetchPokemon(newOffset, limit);\n};\n\nexport const previousPokemonPage = (offset, limit) => {\n  const newOffset = offset - 28;\n  return fetchPokemon(newOffset, limit);\n};\n"]},"metadata":{},"sourceType":"module"}