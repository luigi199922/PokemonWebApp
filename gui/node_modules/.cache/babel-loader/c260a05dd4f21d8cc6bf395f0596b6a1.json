{"ast":null,"code":"var _jsxFileName = \"/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/components/Pokemon/Pokemon.js\";\nimport React, { Component } from 'react';\nimport classes from './Pokemon.module.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../UI/Spinner/Spinner';\nimport PokemonType from './PokemonType/PokemonType';\n\nclass Pokemon extends Component {\n  componentDidMount() {\n    this.props.onLoadPokemon(this.props.match.params.id);\n  }\n\n  render() {\n    let card = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n\n    if (!this.props.loading && this.props.pkm !== undefined) {\n      card = React.createElement(\"div\", {\n        className: classes.Card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.CardHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.Row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.Col2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.Id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.props.pkm.id))), React.createElement(PokemonType, {\n        types: this.props.pkm.types,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.pkm.imageURL,\n        className: \"card-img-top rounded mx-auto mt-2\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.props.pkm.name.toLowerCase().split(' ').map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))), this.props.pkm.stats.map((stat, key) => React.createElement(\"div\", {\n        key: key,\n        className: \"row align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, stat.stat.name)), React.createElement(\"div\", {\n        className: \"col-md-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"progress-bar\" //  role=\"progressBar\"\n        ,\n        style: {\n          width: `${stat.base_stat}%`\n        },\n        \"aria-valuenow\": \"50\",\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, stat.base_stat)))))))), React.createElement(\"div\", {\n        className: \"row align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Attributes\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Height: \", this.props.pkm.height), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Weight: \", this.props.pkm.weight)), React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Abilities\"), this.props.pkm.abilities.map((ability, key) => {\n        return React.createElement(\"p\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, ability.ability.name);\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Base Experience: \", this.props.base_experience)))))));\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.Pokemon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, card);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pkm: state.pokemon.pokemon,\n    loading: state.pokemon.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLoadPokemon: id => dispatch(actions.fetchPokemonById(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pokemon);","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/components/Pokemon/Pokemon.js"],"names":["React","Component","classes","connect","actions","Spinner","PokemonType","Pokemon","componentDidMount","props","onLoadPokemon","match","params","id","render","card","loading","pkm","undefined","Card","CardHeader","Row","Col2","Id","types","imageURL","name","toLowerCase","split","map","letter","charAt","toUpperCase","substring","stats","stat","key","width","base_stat","height","weight","abilities","ability","base_experience","mapStateToProps","state","pokemon","mapDispatchToProps","dispatch","fetchPokemonById"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport classes from './Pokemon.module.css'\n\nimport {connect} from 'react-redux'\nimport * as actions from '../../store/actions/index'\nimport Spinner from '../UI/Spinner/Spinner'\nimport PokemonType from './PokemonType/PokemonType'\n\nclass Pokemon  extends Component { \n\n    componentDidMount(){\n         this.props.onLoadPokemon(this.props.match.params.id)\n    }\n    \n    render(){\n        let card = <Spinner />\n        if(!this.props.loading && this.props.pkm !==undefined){\n            card = (\n                <div className={classes.Card}> \n                <div className={classes.CardHeader}> \n                    <div className={classes.Row}>\n                        <div className={classes.Col2}>\n                            <div className={classes.Id}>\n                            <h5>{this.props.pkm.id}</h5>\n                            </div>\n                        </div>\n                        <PokemonType types={this.props.pkm.types}/>                       \n                    </div>                 \n                </div>\n                <div className=\"card-body\">                \n                    <div className=\"row align-items-center\" >\n                        <div className=\"col-md-3\">\n                            <img  src={this.props.pkm.imageURL} className='card-img-top rounded mx-auto mt-2' alt=\"\" />\n                        </div>\n                        <div className=\"col-md-9\">\n                                <h4 className=\"mx-auto\">{this.props.pkm.name.toLowerCase().split(' ').map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))}</h4>                       \n                                {this.props.pkm.stats.map((stat,key) =>                                \n                             <div key ={key} className=\"row align-items-center\">\n                             <div className=\"col-md-3\">\n                                 <p>{stat.stat.name}</p>\n                            </div>                               \n                            <div className=\"col-md-9\">\n                                     <div className=\"progress\">\n                                         <div className=\"progress-bar\"\n                                        //  role=\"progressBar\"\n                                         style={{\n                                             width: `${stat.base_stat}%`\n                                         }}\n                                         aria-valuenow=\"50\"\n                                         aria-valuemin=\"0\"\n                                         aria-valuemax=\"100\"\n                                         >\n                                         <small>\n                                             {stat.base_stat}\n                                         </small>\n                                         </div>\n                                     </div>\n                                </div>                           \n                             </div>                  \n                             )}                   \n                        </div>\n                    </div>\n                    <div className=\"row align-items-center\">\n                        <div className=\"col-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-6 \">\n                                        <br/>\n                                        <strong>Attributes</strong>\n                                        <p>Height: {this.props.pkm.height}</p>\n                                        <p>Weight: {this.props.pkm.weight}</p>                                   \n                                </div>\n                                <div className=\"col-6\">\n                                    <strong>Abilities</strong>\n                                        {this.props.pkm.abilities.map((ability,key) =>{\n                                        return <p key={key}>{ability.ability.name}</p>\n                                        })}\n                                    <p>Base Experience: {this.props.base_experience}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>   \n            )\n        }\n        return (\n            <div className={classes.Pokemon}>\n                {card}\n            </div>          \n        )\n    }\n   \n}\nconst mapStateToProps = state =>{\n    return {\n        pkm : state.pokemon.pokemon,\n        loading: state.pokemon.loading,\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLoadPokemon: (id) => dispatch(actions.fetchPokemonById(id)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Pokemon)\n"]},"metadata":{},"sourceType":"module"}