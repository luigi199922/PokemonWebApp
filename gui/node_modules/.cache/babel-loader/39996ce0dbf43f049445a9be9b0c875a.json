{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios/auth\";\nexport function* checkAuthTimeoutSaga(action) {\n  yield setTimeout(() => {\n    put(actions.logout());\n  }, action.expirationTime * 1000);\n}\nexport function* logoutSaga() {\n  yield localStorage.removeItem(\"token\");\n  yield localStorage.removeItem(\"expirationDate\");\n  yield localStorage.removeItem(\"userId\");\n  const url = \"logout/\";\n\n  try {\n    const res = yield axios.post(url);\n    yield put(actions.logoutSuccess(res.data));\n  } catch (error) {\n    yield put(actions.authFail(error.response.data));\n  }\n}","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/saga/auth.js"],"names":["put","actions","axios","checkAuthTimeoutSaga","action","setTimeout","logout","expirationTime","logoutSaga","localStorage","removeItem","url","res","post","logoutSuccess","data","error","authFail","response"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAO,UAAUC,oBAAV,CAA+BC,MAA/B,EAAuC;AAC5C,QAAMC,UAAU,CAAC,MAAM;AACrBL,IAAAA,GAAG,CAACC,OAAO,CAACK,MAAR,EAAD,CAAH;AACD,GAFe,EAEbF,MAAM,CAACG,cAAP,GAAwB,IAFX,CAAhB;AAGD;AAED,OAAO,UAAUC,UAAV,GAAuB;AAC5B,QAAMC,YAAY,CAACC,UAAb,CAAwB,OAAxB,CAAN;AACA,QAAMD,YAAY,CAACC,UAAb,CAAwB,gBAAxB,CAAN;AACA,QAAMD,YAAY,CAACC,UAAb,CAAwB,QAAxB,CAAN;AACA,QAAMC,GAAG,GAAG,SAAZ;;AACA,MAAG;AACD,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAWF,GAAX,CAAlB;AACA,UAAMX,GAAG,CAACC,OAAO,CAACa,aAAR,CAAsBF,GAAG,CAACG,IAA1B,CAAD,CAAT;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACX,UAAMhB,GAAG,CAACC,OAAO,CAACgB,QAAR,CAAiBD,KAAK,CAACE,QAAN,CAAeH,IAAhC,CAAD,CAAT;AACD;AACF","sourcesContent":["import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios/auth\";\n\nexport function* checkAuthTimeoutSaga(action) {\n  yield setTimeout(() => {\n    put(actions.logout());\n  }, action.expirationTime * 1000);\n}\n\nexport function* logoutSaga() {\n  yield localStorage.removeItem(\"token\");\n  yield localStorage.removeItem(\"expirationDate\");\n  yield localStorage.removeItem(\"userId\");\n  const url = \"logout/\";\n  try{\n    const res = yield axios.post(url)\n    yield put(actions.logoutSuccess(res.data));\n  }catch(error){\n    yield put(actions.authFail(error.response.data));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}