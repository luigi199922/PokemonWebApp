{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios/axios\";\nimport axiosUsers from \"../../axios/users\";\nimport axiosPokemon from \"../../axios/pokemon\";\nimport { createHTTPHeaders } from '../../shared/utility';\nexport function* fetchPokemonByIdSaga(action) {\n  try {\n    const res = yield axios.get(action.id);\n    const types = yield res.data.types.map(type => type.type.name);\n    const pokemon = {\n      abilities: res.data.abilities,\n      base_experience: res.data.base_experience,\n      forms: res.data.forms,\n      height: res.data.height / 10,\n      id: res.data.id,\n      weight: res.data.weight / 10,\n      types: types,\n      name: res.data.name,\n      stats: res.data.stats,\n      imageURL: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + res.data.id + \".png\"\n    };\n    yield put(actions.fetchPokemonByIdSuccess(pokemon));\n  } catch (error) {\n    yield put(actions.fetchPokemonByIdFailed(error));\n  }\n}\nexport function* getUserFavoritePokemonSaga(action) {\n  console.log(action.userId); // Headers\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }; // If token, add to headers config\n\n  if (action.token) {\n    config.headers[\"Authorization\"] = `Bearer ${action.token}`;\n  }\n\n  console.log(config);\n  const url = \"favorite\";\n\n  try {\n    const res = yield axiosUsers.get(url, config);\n    console.log(res.data);\n    yield put(actions.getUserFavoritePokemonSuccess(res.data));\n  } catch (error) {\n    yield put(actions.getUserFavoritePokemonFailed(error));\n  }\n}\nexport function* fetchPokemonListSaga(action) {\n  try {\n    const response = yield axios.get(\"/?offset=\" + action.offset + \"&limit=\" + action.limit);\n    yield put(actions.fetchPokemonSuccess(response.data.results, action.offset, action.limit));\n  } catch (error) {\n    yield put(actions.fetchPokemonFailed());\n  }\n}\nexport function* addPokemonToApiSaga(action) {\n  const config = createHTTPHeaders(action.token);\n  const pokemon = {\n    pokemonId: action.id,\n    name: action.name\n  };\n\n  try {\n    const url = \"create\";\n    const response = yield axiosPokemon.post(url, pokemon, config);\n    console.log(response); // addPokemonToUserFavoriteSaga(action)\n  } catch (error) {}\n\n  try {\n    const url = \"favorite\"; // const response = yield axiosPokemon.get(url)\n    // const state = response.data\n    // const finalFav = {\n    //   ...state,\n    //   pokemon : [\n    //     ...state.pokemon,\n    //     pokemon,\n    //   ]\n    // }\n    // console.log(finalFav)\n\n    const response2 = yield axiosPokemon.patch(url, pokemon, config);\n    console.log(response2);\n  } catch (error) {\n    console.log(error);\n  }\n} // export function* addPokemonToUserFavoriteSaga(action){\n//   const pokemon = {\n//     idNum: action.id,\n//     name: action.name,\n//   }\n//   console.log(pokemon)\n//   const config = createHTTPHeaders(action.token)\n//   try {   \n//     console.log(response.data);\n//   } catch (error) {\n//   }\n// }","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/saga/pokemon.js"],"names":["put","actions","axios","axiosUsers","axiosPokemon","createHTTPHeaders","fetchPokemonByIdSaga","action","res","get","id","types","data","map","type","name","pokemon","abilities","base_experience","forms","height","weight","stats","imageURL","fetchPokemonByIdSuccess","error","fetchPokemonByIdFailed","getUserFavoritePokemonSaga","console","log","userId","config","headers","token","url","getUserFavoritePokemonSuccess","getUserFavoritePokemonFailed","fetchPokemonListSaga","response","offset","limit","fetchPokemonSuccess","results","fetchPokemonFailed","addPokemonToApiSaga","pokemonId","post","response2","patch"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AAEA,OAAO,UAAUC,oBAAV,CAA+BC,MAA/B,EAAuC;AAC5C,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUF,MAAM,CAACG,EAAjB,CAAlB;AACA,UAAMC,KAAK,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAASD,KAAT,CAAeE,GAAf,CAAoBC,IAAD,IAAUA,IAAI,CAACA,IAAL,CAAUC,IAAvC,CAApB;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,SAAS,EAAET,GAAG,CAACI,IAAJ,CAASK,SADN;AAEdC,MAAAA,eAAe,EAAEV,GAAG,CAACI,IAAJ,CAASM,eAFZ;AAGdC,MAAAA,KAAK,EAAEX,GAAG,CAACI,IAAJ,CAASO,KAHF;AAIdC,MAAAA,MAAM,EAAEZ,GAAG,CAACI,IAAJ,CAASQ,MAAT,GAAkB,EAJZ;AAKdV,MAAAA,EAAE,EAAEF,GAAG,CAACI,IAAJ,CAASF,EALC;AAMdW,MAAAA,MAAM,EAAEb,GAAG,CAACI,IAAJ,CAASS,MAAT,GAAkB,EANZ;AAOdV,MAAAA,KAAK,EAAEA,KAPO;AAQdI,MAAAA,IAAI,EAAEP,GAAG,CAACI,IAAJ,CAASG,IARD;AASdO,MAAAA,KAAK,EAAEd,GAAG,CAACI,IAAJ,CAASU,KATF;AAUdC,MAAAA,QAAQ,EACN,8EACAf,GAAG,CAACI,IAAJ,CAASF,EADT,GAEA;AAbY,KAAhB;AAeA,UAAMV,GAAG,CAACC,OAAO,CAACuB,uBAAR,CAAgCR,OAAhC,CAAD,CAAT;AACD,GAnBD,CAmBE,OAAOS,KAAP,EAAc;AACd,UAAMzB,GAAG,CAACC,OAAO,CAACyB,sBAAR,CAA+BD,KAA/B,CAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUE,0BAAV,CAAqCpB,MAArC,EAA6C;AAClDqB,EAAAA,OAAO,CAACC,GAAR,CAAYtB,MAAM,CAACuB,MAAnB,EADkD,CAGlD;;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf,CAJkD,CASlD;;AACA,MAAIzB,MAAM,CAAC0B,KAAX,EAAkB;AAChBF,IAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAmC,UAASzB,MAAM,CAAC0B,KAAM,EAAzD;AACD;;AACDL,EAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACA,QAAMG,GAAG,GAAG,UAAZ;;AACA,MAAI;AACF,UAAM1B,GAAG,GAAG,MAAML,UAAU,CAACM,GAAX,CAAeyB,GAAf,EAAoBH,MAApB,CAAlB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYrB,GAAG,CAACI,IAAhB;AACA,UAAMZ,GAAG,CAACC,OAAO,CAACkC,6BAAR,CAAsC3B,GAAG,CAACI,IAA1C,CAAD,CAAT;AACD,GAJD,CAIE,OAAOa,KAAP,EAAc;AACd,UAAMzB,GAAG,CAACC,OAAO,CAACmC,4BAAR,CAAqCX,KAArC,CAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUY,oBAAV,CAA+B9B,MAA/B,EAAuC;AAC5C,MAAI;AACF,UAAM+B,QAAQ,GAAG,MAAMpC,KAAK,CAACO,GAAN,CACrB,cAAcF,MAAM,CAACgC,MAArB,GAA8B,SAA9B,GAA0ChC,MAAM,CAACiC,KAD5B,CAAvB;AAGA,UAAMxC,GAAG,CACPC,OAAO,CAACwC,mBAAR,CACEH,QAAQ,CAAC1B,IAAT,CAAc8B,OADhB,EAEEnC,MAAM,CAACgC,MAFT,EAGEhC,MAAM,CAACiC,KAHT,CADO,CAAT;AAOD,GAXD,CAWE,OAAOf,KAAP,EAAc;AACd,UAAMzB,GAAG,CAACC,OAAO,CAAC0C,kBAAR,EAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,CAA8BrC,MAA9B,EAAsC;AAC3C,QAAMwB,MAAM,GAAG1B,iBAAiB,CAACE,MAAM,CAAC0B,KAAR,CAAhC;AACA,QAAMjB,OAAO,GAAG;AACd6B,IAAAA,SAAS,EAAEtC,MAAM,CAACG,EADJ;AAEdK,IAAAA,IAAI,EAAER,MAAM,CAACQ;AAFC,GAAhB;;AAIA,MAAI;AAEF,UAAMmB,GAAG,GAAG,QAAZ;AACA,UAAMI,QAAQ,GAAG,MAAMlC,YAAY,CAAC0C,IAAb,CAAkBZ,GAAlB,EAAuBlB,OAAvB,EAAgCe,MAAhC,CAAvB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ,EAJE,CAKF;AACD,GAND,CAME,OAAOb,KAAP,EAAc,CAEf;;AACC,MAAG;AACH,UAAMS,GAAG,GAAG,UAAZ,CADG,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMa,SAAS,GAAG,MAAM3C,YAAY,CAAC4C,KAAb,CAAmBd,GAAnB,EAAwBlB,OAAxB,EAAiCe,MAAjC,CAAxB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYkB,SAAZ;AACD,GAdC,CAcA,OAAMtB,KAAN,EAAY;AACZG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD;AACF,C,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA","sourcesContent":["import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios/axios\";\nimport axiosUsers from \"../../axios/users\";\nimport axiosPokemon from \"../../axios/pokemon\"\nimport { createHTTPHeaders } from '../../shared/utility'\n\nexport function* fetchPokemonByIdSaga(action) {\n  try {\n    const res = yield axios.get(action.id);\n    const types = yield res.data.types.map((type) => type.type.name);\n    const pokemon = {\n      abilities: res.data.abilities,\n      base_experience: res.data.base_experience,\n      forms: res.data.forms,\n      height: res.data.height / 10,\n      id: res.data.id,\n      weight: res.data.weight / 10,\n      types: types,\n      name: res.data.name,\n      stats: res.data.stats,\n      imageURL:\n        \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\n        res.data.id +\n        \".png\",\n    };\n    yield put(actions.fetchPokemonByIdSuccess(pokemon));\n  } catch (error) {\n    yield put(actions.fetchPokemonByIdFailed(error));\n  }\n}\n\nexport function* getUserFavoritePokemonSaga(action) {\n  console.log(action.userId);\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  // If token, add to headers config\n  if (action.token) {\n    config.headers[\"Authorization\"] = `Bearer ${action.token}`;\n  }\n  console.log(config)\n  const url = \"favorite\";\n  try {\n    const res = yield axiosUsers.get(url, config);\n    console.log(res.data);\n    yield put(actions.getUserFavoritePokemonSuccess(res.data));\n  } catch (error) {\n    yield put(actions.getUserFavoritePokemonFailed(error));\n  }\n}\n\nexport function* fetchPokemonListSaga(action) {\n  try {\n    const response = yield axios.get(\n      \"/?offset=\" + action.offset + \"&limit=\" + action.limit\n    );\n    yield put(\n      actions.fetchPokemonSuccess(\n        response.data.results,\n        action.offset,\n        action.limit\n      )\n    );\n  } catch (error) {\n    yield put(actions.fetchPokemonFailed());\n  }\n}\n\nexport function* addPokemonToApiSaga(action) {\n  const config = createHTTPHeaders(action.token)\n  const pokemon = {\n    pokemonId: action.id,\n    name: action.name,\n  };\n  try {\n    \n    const url = \"create\";\n    const response = yield axiosPokemon.post(url, pokemon, config);\n    console.log(response)\n    // addPokemonToUserFavoriteSaga(action)\n  } catch (error) {\n      \n  }\n    try{\n    const url = \"favorite\";\n    // const response = yield axiosPokemon.get(url)\n    // const state = response.data\n    // const finalFav = {\n    //   ...state,\n    //   pokemon : [\n    //     ...state.pokemon,\n    //     pokemon,\n    //   ]\n    // }\n    // console.log(finalFav)\n    const response2 = yield axiosPokemon.patch(url, pokemon, config);\n    console.log(response2)\n  } catch(error){\n    console.log(error)\n  }\n}\n\n// export function* addPokemonToUserFavoriteSaga(action){\n//   const pokemon = {\n//     idNum: action.id,\n//     name: action.name,\n//   }\n//   console.log(pokemon)\n  \n//   const config = createHTTPHeaders(action.token)\n//   try {   \n   \n//     console.log(response.data);\n//   } catch (error) {\n      \n//   }\n\n\n// }\n"]},"metadata":{},"sourceType":"module"}