{"ast":null,"code":"import * as actions from \"./actionTypes\";\nimport axios from \"../../axios/axios\";\nimport axiosUsers from \"../../axios/users\";\nexport const fetchPokemon = (offset, limit) => {\n  return dispatch => {\n    axios.get(\"/?offset=\" + offset + \"&limit=\" + limit).then(response => {\n      //maybe get the page number and add it to the url\n      dispatch(fetchPokemonSuccess(response.data.results, offset, limit));\n    }).catch(error => {\n      dispatch(fetchPokemonFailed());\n    });\n  };\n};\nexport const fetchPokemonFailed = () => {\n  return {\n    type: actions.FETCH_POKEMON_FAILED\n  };\n};\nexport const addPokemonToState = pokemon => {\n  return {\n    type: actions.ADD_POKEMON_TO_STATE,\n    pokemon: pokemon\n  };\n};\nexport const fetchPokemonSuccess = (pokemonArray, lowerBound, upperBound) => {\n  return {\n    type: actions.FETCH_POKEMON_SUCCESS,\n    pokemon: pokemonArray,\n    lower: lowerBound,\n    upper: upperBound\n  };\n};\nexport const nextPokemonPage = (offset, limit) => {\n  const newOffset = offset + 28;\n  return fetchPokemon(newOffset, limit);\n};\nexport const previousPokemonPage = (offset, limit) => {\n  const newOffset = offset - 28;\n  return fetchPokemon(newOffset, limit);\n};\nexport const fetchPokemonById = id => {\n  return dispatch => {\n    axios.get(id).then(res => {\n      const types = res.data.types.map(type => type.type.name);\n      const pokemon = {\n        abilities: res.data.abilities,\n        base_experience: res.data.base_experience,\n        forms: res.data.forms,\n        height: res.data.height / 10,\n        id: res.data.id,\n        weight: res.data.weight / 10,\n        types: types,\n        name: res.data.name,\n        stats: res.data.stats,\n        imageURL: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + res.data.id + \".png\"\n      };\n      dispatch(fetchPokemonByIdSuccess(pokemon));\n    }).catch(error => {\n      dispatch(fetchPokemonByIdFailed(error));\n    });\n  };\n};\nexport const fetchPokemonByIdSuccess = pokemon => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_SUCCESS,\n    pokemon: pokemon\n  };\n};\nexport const fetchPokemonByIdFailed = err => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_FAILED,\n    error: err\n  };\n};\nexport const removePokemonFromState = () => {\n  return {\n    type: actions.REMOVE_POKEMON_FROM_STATE\n  };\n};\nexport const getUserFavoritePokemon = id => {\n  return dispatch => {\n    axiosUsers.get(\"user-favorite/\" + id).then(res => {\n      const pokemonArray = res.data;\n      dispatch(getUserFavoritePokemonSuccess(pokemonArray));\n    }).catch(error => {\n      dispatch(getUserFavoritePokemonFailed(error));\n    });\n  };\n};\nexport const getUserFavoritePokemonSuccess = pokemonArray => {\n  return {\n    type: actions.GET_USER_FAVORITE_POKEMON_SUCCESS,\n    pokemon: pokemonArray\n  };\n};\nexport const getUserFavoritePokemonFailed = error => {\n  return {\n    type: actions.GET_USER_FAVORITE_POKEMON_FAILED,\n    error: error\n  };\n};","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/actions/pokemon.js"],"names":["actions","axios","axiosUsers","fetchPokemon","offset","limit","dispatch","get","then","response","fetchPokemonSuccess","data","results","catch","error","fetchPokemonFailed","type","FETCH_POKEMON_FAILED","addPokemonToState","pokemon","ADD_POKEMON_TO_STATE","pokemonArray","lowerBound","upperBound","FETCH_POKEMON_SUCCESS","lower","upper","nextPokemonPage","newOffset","previousPokemonPage","fetchPokemonById","id","res","types","map","name","abilities","base_experience","forms","height","weight","stats","imageURL","fetchPokemonByIdSuccess","fetchPokemonByIdFailed","FETCH_POKEMON_BY_ID_SUCCESS","err","FETCH_POKEMON_BY_ID_FAILED","removePokemonFromState","REMOVE_POKEMON_FROM_STATE","getUserFavoritePokemon","getUserFavoritePokemonSuccess","getUserFavoritePokemonFailed","GET_USER_FAVORITE_POKEMON_SUCCESS","GET_USER_FAVORITE_POKEMON_FAILED"],"mappings":"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","sourcesContent":["import * as actions from \"./actionTypes\";\nimport axios from \"../../axios/axios\";\nimport axiosUsers from \"../../axios/users\";\n\nexport const fetchPokemon = (offset, limit) => {\n  return dispatch => {\n    axios\n      .get(\"/?offset=\" + offset + \"&limit=\" + limit)\n      .then(response => {\n        //maybe get the page number and add it to the url\n        dispatch(fetchPokemonSuccess(response.data.results, offset, limit));\n      })\n      .catch(error => {\n        dispatch(fetchPokemonFailed());\n      });\n  };\n};\nexport const fetchPokemonFailed = () => {\n  return {\n    type: actions.FETCH_POKEMON_FAILED\n  };\n};\nexport const addPokemonToState = pokemon => {\n  return {\n    type: actions.ADD_POKEMON_TO_STATE,\n    pokemon: pokemon\n  };\n};\n\nexport const fetchPokemonSuccess = (pokemonArray, lowerBound, upperBound) => {\n  return {\n    type: actions.FETCH_POKEMON_SUCCESS,\n    pokemon: pokemonArray,\n    lower: lowerBound,\n    upper: upperBound\n  };\n};\n\nexport const nextPokemonPage = (offset, limit) => {\n  const newOffset = offset + 28;\n  return fetchPokemon(newOffset, limit);\n};\n\nexport const previousPokemonPage = (offset, limit) => {\n  const newOffset = offset - 28;\n  return fetchPokemon(newOffset, limit);\n};\n\nexport const fetchPokemonById = id => {\n  return dispatch => {\n    axios\n      .get(id)\n      .then(res => {\n        const types = res.data.types.map(type => type.type.name);\n        const pokemon = {\n          abilities: res.data.abilities,\n          base_experience: res.data.base_experience,\n          forms: res.data.forms,\n          height: res.data.height / 10,\n          id: res.data.id,\n          weight: res.data.weight / 10,\n          types: types,\n          name: res.data.name,\n          stats: res.data.stats,\n          imageURL:\n            \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\n            res.data.id +\n            \".png\"\n        };\n        dispatch(fetchPokemonByIdSuccess(pokemon));\n      })\n      .catch(error => {\n        dispatch(fetchPokemonByIdFailed(error));\n      });\n  };\n};\nexport const fetchPokemonByIdSuccess = pokemon => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_SUCCESS,\n    pokemon: pokemon\n  };\n};\nexport const fetchPokemonByIdFailed = err => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_FAILED,\n    error: err\n  };\n};\n\nexport const removePokemonFromState = () => {\n  return {\n    type: actions.REMOVE_POKEMON_FROM_STATE\n  };\n};\n\nexport const getUserFavoritePokemon = id => {\n  return dispatch => {\n    axiosUsers\n      .get(\"user-favorite/\" + id)\n      .then(res => {\n        const pokemonArray = res.data\n        dispatch(getUserFavoritePokemonSuccess(pokemonArray));\n      })\n      .catch(error => {\n        dispatch(getUserFavoritePokemonFailed(error));\n      });\n  };\n};\n\nexport const getUserFavoritePokemonSuccess = (pokemonArray) => {\n  return {\n    type: actions.GET_USER_FAVORITE_POKEMON_SUCCESS,\n    pokemon: pokemonArray\n  };\n};\n\nexport const getUserFavoritePokemonFailed = (error) => {\n    return {\n      type: actions.GET_USER_FAVORITE_POKEMON_FAILED,\n      error: error,\n    };\n  };\n"]},"metadata":{},"sourceType":"module"}