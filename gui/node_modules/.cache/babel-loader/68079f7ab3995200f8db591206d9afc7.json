{"ast":null,"code":"import _slicedToArray from \"/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/react-poke-api/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/react-poke-api/src/components/PokemonListCard/PokemonListCard.js\";\nimport React, { setState, useEffect } from 'react';\nimport axios from '../../axios';\n\nconst PokemonListCard = props => {\n  const _setState = setState(''),\n        _setState2 = _slicedToArray(_setState, 2),\n        pokemonImage = _setState2[0],\n        setPokemonImage = _setState2[1];\n\n  const _setState3 = setState(0),\n        _setState4 = _slicedToArray(_setState3, 2),\n        pokemonId = _setState4[0],\n        setPokemonId = _setState4[1];\n\n  const _setState5 = setState(true),\n        _setState6 = _slicedToArray(_setState5, 2),\n        isLoading = _setState6[0],\n        setIsLoading = _setState6[1];\n\n  const _setState7 = setState(false),\n        _setState8 = _slicedToArray(_setState7, 2),\n        toManyRequests = _setState8[0],\n        setToManyRequests = _setState8[1];\n\n  useEffect(() => {\n    axios.get(props.url).then(res => {\n      setPokemonImage(res.data.sprites.front_default);\n      setIsLoading(false);\n      setPokemonId(res.data.id);\n    });\n  }, [pokemonImage]);\n  return React.createElement(\"div\", {\n    className: \"col-md-3 col-sm-6 mt-5\",\n    onClick: props.clicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card bg-light\",\n    style: {\n      border: '2px solid black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"card-header bg-danger font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, pokemonId), isLoading ? React.createElement(\"img\", {\n    src: spinner,\n    style: {\n      width: '100px',\n      height: '100px'\n    },\n    className: \"card-img-top mx-auto rounded d-block mt-2\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }) : null, React.createElement(Sprite, {\n    className: \"card-img-top rounded mx-auto mt-2\",\n    alt: \"Pokemon\",\n    src: pokemonImage,\n    style: toManyRequests ? {\n      display: 'none'\n    } : isLoading ? null : {\n      display: 'block'\n    },\n    onLoad: () => setIsLoading(false),\n    onError: () => setToManyRequests(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card-body mx-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, props.name.toLowerCase().split(' ').map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))))));\n};\n\nexport default PokemonListCard;","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/react-poke-api/src/components/PokemonListCard/PokemonListCard.js"],"names":["React","setState","useEffect","axios","PokemonListCard","props","pokemonImage","setPokemonImage","pokemonId","setPokemonId","isLoading","setIsLoading","toManyRequests","setToManyRequests","get","url","then","res","data","sprites","front_default","id","clicked","border","spinner","width","height","display","name","toLowerCase","split","map","letter","charAt","toUpperCase","substring"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAAA,oBACWJ,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,QACtBK,YADsB;AAAA,QACRC,eADQ;;AAAA,qBAEKN,QAAQ,CAAC,CAAD,CAFb;AAAA;AAAA,QAEtBO,SAFsB;AAAA,QAEXC,YAFW;;AAAA,qBAGKR,QAAQ,CAAC,IAAD,CAHb;AAAA;AAAA,QAGtBS,SAHsB;AAAA,QAGXC,YAHW;;AAAA,qBAIeV,QAAQ,CAAC,KAAD,CAJvB;AAAA;AAAA,QAItBW,cAJsB;AAAA,QAINC,iBAJM;;AAM7BX,EAAAA,SAAS,CAAE,MAAM;AACbC,IAAAA,KAAK,CAACW,GAAN,CAAUT,KAAK,CAACU,GAAhB,EAAqBC,IAArB,CAA0BC,GAAG,IAAE;AAC3BV,MAAAA,eAAe,CAACU,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBC,aAAlB,CAAf;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,YAAY,CAACQ,GAAG,CAACC,IAAJ,CAASG,EAAV,CAAZ;AACH,KAJD;AAKH,GANQ,EAMN,CAACf,YAAD,CANM,CAAT;AAOA,SACQ;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAwC,IAAA,OAAO,EAAED,KAAK,CAACiB,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AACA,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AAAI,IAAA,SAAS,EAAC,wCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwDf,SAAxD,CAHJ,EAKSE,SAAS,GACN;AAAK,IAAA,GAAG,EAAEc,OAAV;AAAmB,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,OAAR;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAA1B;AAA8D,IAAA,SAAS,EAAC,2CAAxE;AAAoH,IAAA,GAAG,EAAC,EAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAEP,IAPX,EASQ,oBAAC,MAAD;AACC,IAAA,SAAS,EAAC,mCADX;AAEC,IAAA,GAAG,EAAC,SAFL;AAGC,IAAA,GAAG,EAAEpB,YAHN;AAIC,IAAA,KAAK,EACFM,cAAc,GACV;AAAEe,MAAAA,OAAO,EAAE;AAAX,KADU,GAEVjB,SAAS,GACT,IADS,GAET;AAAEiB,MAAAA,OAAO,EAAE;AAAX,KATR;AAWC,IAAA,MAAM,EAAE,MAAKhB,YAAY,CAAC,KAAD,CAX1B;AAYC,IAAA,OAAO,EAAE,MAAME,iBAAiB,CAAC,IAAD,CAZjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATR,EAyBQ;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,KAAK,CAACuB,IAAN,CAAWC,WAAX,GAAyBC,KAAzB,CAA+B,GAA/B,EAAoCC,GAApC,CAAwCC,MAAM,IAAIA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,SAAP,CAAiB,CAAjB,CAAnF,CADL,CADJ,CAzBR,CADJ,CADR;AAwCH,CArDD;;AAsDA,eAAe/B,eAAf","sourcesContent":["import React , { setState, useEffect }from 'react'\nimport axios from '../../axios'\n\nconst PokemonListCard = props => {\n    const [pokemonImage, setPokemonImage] = setState('')\n    const [pokemonId, setPokemonId] = setState(0)\n    const [isLoading, setIsLoading] = setState(true)\n    const [toManyRequests, setToManyRequests] = setState(false)\n\n    useEffect (() => {\n        axios.get(props.url).then(res=>{\n            setPokemonImage(res.data.sprites.front_default)\n            setIsLoading(false)\n            setPokemonId(res.data.id)\n        })\n    }, [pokemonImage])\n    return (\n            <div className=\"col-md-3 col-sm-6 mt-5\" onClick={props.clicked}>\n                <div className=\"card bg-light\" \n                style={{border: '2px solid black',\n                 }}>\n                    <h5 className=\"card-header bg-danger font-weight-bold\">{pokemonId}</h5>\n                        \n                        {isLoading? (\n                            <img src={spinner} style={{width: '100px', height: '100px' }} className=\"card-img-top mx-auto rounded d-block mt-2\" alt=\"\"></img>\n                        ): null \n                        }\n                        <Sprite\n                         className=\"card-img-top rounded mx-auto mt-2\"\n                         alt=\"Pokemon\"\n                         src={pokemonImage}\n                         style={\n                            toManyRequests\n                              ? { display: 'none' }\n                              : isLoading\n                              ? null\n                              : { display: 'block' }\n                          }\n                         onLoad={()=> setIsLoading(false)}\n                         onError={() => setToManyRequests(true)}\n                         />\n                       \n                       \n                        <div className=\"card-body mx-auto\">\n                            <h3 className=\"card-title\">\n                                {props.name.toLowerCase().split(' ').map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))}\n                            </h3>\n                           \n\n                            \n                           \n                            \n                        </div>\n                </div>\n            </div>\n    )\n}\nexport default PokemonListCard"]},"metadata":{},"sourceType":"module"}