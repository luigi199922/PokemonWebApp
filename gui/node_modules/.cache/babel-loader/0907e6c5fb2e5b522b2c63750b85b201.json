{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios/axios\";\nimport axiosUsers from \"../../axios/users\";\nexport function* fetchPokemonByIdSaga(action) {\n  try {\n    const res = yield axios.get(action.id);\n    const types = res.data.types.map(type => type.type.name);\n    const pokemon = {\n      abilities: res.data.abilities,\n      base_experience: res.data.base_experience,\n      forms: res.data.forms,\n      height: res.data.height / 10,\n      id: res.data.id,\n      weight: res.data.weight / 10,\n      types: types,\n      name: res.data.name,\n      stats: res.data.stats,\n      imageURL: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + res.data.id + \".png\"\n    };\n    yield put(actions.fetchPokemonByIdSuccess(pokemon));\n  } catch (error) {\n    yield put(actions.fetchPokemonByIdFailed(error));\n  }\n}\nexport function* getUserFavoritePokemonSaga(action) {\n  try {\n    const res = yield axiosUsers.get(\"user-favorite/\" + action.id);\n    put(actions.getUserFavoritePokemonSuccess(res.data));\n  } catch (error) {\n    put(actions.getUserFavoritePokemonFailed(error));\n  }\n}\nexport function* fetchPokemonListSaga(action) {\n  try {\n    const response = yield axios.get(\"/?offset=\" + action.offset + \"&limit=\" + action.limit);\n    console.log(response.data.results);\n    yield put(actions.fetchPokemonSuccess(response.data.results, action.offset, action.limit));\n  } catch (error) {\n    yield put(actions.fetchPokemonFailed());\n  }\n}","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/saga/pokemon.js"],"names":["put","actions","axios","axiosUsers","fetchPokemonByIdSaga","action","res","get","id","types","data","map","type","name","pokemon","abilities","base_experience","forms","height","weight","stats","imageURL","fetchPokemonByIdSuccess","error","fetchPokemonByIdFailed","getUserFavoritePokemonSaga","getUserFavoritePokemonSuccess","getUserFavoritePokemonFailed","fetchPokemonListSaga","response","offset","limit","console","log","results","fetchPokemonSuccess","fetchPokemonFailed"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAO,UAAUC,oBAAV,CAA+BC,MAA/B,EAAuC;AAC5C,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUF,MAAM,CAACG,EAAjB,CAAlB;AACA,UAAMC,KAAK,GAAGH,GAAG,CAACI,IAAJ,CAASD,KAAT,CAAeE,GAAf,CAAmBC,IAAI,IAAIA,IAAI,CAACA,IAAL,CAAUC,IAArC,CAAd;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,SAAS,EAAET,GAAG,CAACI,IAAJ,CAASK,SADN;AAEdC,MAAAA,eAAe,EAAEV,GAAG,CAACI,IAAJ,CAASM,eAFZ;AAGdC,MAAAA,KAAK,EAAEX,GAAG,CAACI,IAAJ,CAASO,KAHF;AAIdC,MAAAA,MAAM,EAAEZ,GAAG,CAACI,IAAJ,CAASQ,MAAT,GAAkB,EAJZ;AAKdV,MAAAA,EAAE,EAAEF,GAAG,CAACI,IAAJ,CAASF,EALC;AAMdW,MAAAA,MAAM,EAAEb,GAAG,CAACI,IAAJ,CAASS,MAAT,GAAkB,EANZ;AAOdV,MAAAA,KAAK,EAAEA,KAPO;AAQdI,MAAAA,IAAI,EAAEP,GAAG,CAACI,IAAJ,CAASG,IARD;AASdO,MAAAA,KAAK,EAAEd,GAAG,CAACI,IAAJ,CAASU,KATF;AAUdC,MAAAA,QAAQ,EACN,8EACAf,GAAG,CAACI,IAAJ,CAASF,EADT,GAEA;AAbY,KAAhB;AAeA,UAAMR,GAAG,CAACC,OAAO,CAACqB,uBAAR,CAAgCR,OAAhC,CAAD,CAAT;AACD,GAnBD,CAmBE,OAAOS,KAAP,EAAc;AACd,UAAMvB,GAAG,CAACC,OAAO,CAACuB,sBAAR,CAA+BD,KAA/B,CAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUE,0BAAV,CAAqCpB,MAArC,EAA6C;AAClD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMH,UAAU,CAACI,GAAX,CAAe,mBAAmBF,MAAM,CAACG,EAAzC,CAAlB;AACAR,IAAAA,GAAG,CAACC,OAAO,CAACyB,6BAAR,CAAsCpB,GAAG,CAACI,IAA1C,CAAD,CAAH;AACD,GAHD,CAGE,OAAOa,KAAP,EAAc;AACdvB,IAAAA,GAAG,CAACC,OAAO,CAAC0B,4BAAR,CAAqCJ,KAArC,CAAD,CAAH;AACD;AACF;AAED,OAAO,UAAUK,oBAAV,CAA+BvB,MAA/B,EAAuC;AAC5C,MAAI;AACF,UAAMwB,QAAQ,GAAG,MAAM3B,KAAK,CAACK,GAAN,CACrB,cAAcF,MAAM,CAACyB,MAArB,GAA8B,SAA9B,GAA0CzB,MAAM,CAAC0B,KAD5B,CAAvB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACnB,IAAT,CAAcwB,OAA1B;AACA,UAAMlC,GAAG,CACPC,OAAO,CAACkC,mBAAR,CACEN,QAAQ,CAACnB,IAAT,CAAcwB,OADhB,EAEE7B,MAAM,CAACyB,MAFT,EAGEzB,MAAM,CAAC0B,KAHT,CADO,CAAT;AAOD,GAZD,CAYE,OAAOR,KAAP,EAAc;AACd,UAAMvB,GAAG,CAACC,OAAO,CAACmC,kBAAR,EAAD,CAAT;AACD;AACF","sourcesContent":["import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios/axios\";\nimport axiosUsers from \"../../axios/users\";\n\nexport function* fetchPokemonByIdSaga(action) {\n  try {\n    const res = yield axios.get(action.id);\n    const types = res.data.types.map(type => type.type.name);\n    const pokemon = {\n      abilities: res.data.abilities,\n      base_experience: res.data.base_experience,\n      forms: res.data.forms,\n      height: res.data.height / 10,\n      id: res.data.id,\n      weight: res.data.weight / 10,\n      types: types,\n      name: res.data.name,\n      stats: res.data.stats,\n      imageURL:\n        \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\n        res.data.id +\n        \".png\"\n    };\n    yield put(actions.fetchPokemonByIdSuccess(pokemon));\n  } catch (error) {\n    yield put(actions.fetchPokemonByIdFailed(error));\n  }\n}\n\nexport function* getUserFavoritePokemonSaga(action) {\n  try {\n    const res = yield axiosUsers.get(\"user-favorite/\" + action.id);\n    put(actions.getUserFavoritePokemonSuccess(res.data));\n  } catch (error) {\n    put(actions.getUserFavoritePokemonFailed(error));\n  }\n}\n\nexport function* fetchPokemonListSaga(action) {\n  try {\n    const response = yield axios.get(\n      \"/?offset=\" + action.offset + \"&limit=\" + action.limit\n    );\n    console.log(response.data.results)\n    yield put(\n      actions.fetchPokemonSuccess(\n        response.data.results,\n        action.offset,\n        action.limit\n      )\n    );\n  } catch (error) {\n    yield put(actions.fetchPokemonFailed());\n  }\n}\n"]},"metadata":{},"sourceType":"module"}