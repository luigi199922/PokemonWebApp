{"ast":null,"code":"var _jsxFileName = \"/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/containers/Profile/Profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { Redirect } from 'react-router';\nimport ProfileCard from '../../components/ProfileCard/ProfileCard';\nimport * as actions from '../../store/actions/index';\n\nclass Profile extends Component {\n  componentDidMount() {\n    this.props.getUserFavoritePokemon(this.props.userId);\n  }\n\n  render() {\n    let content = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n    console.log(this.props.isAuth);\n    let isAuthenticated = null;\n\n    if (!this.props.isAuth) {\n      isAuthenticated = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n    }\n\n    if (!this.props.loading) {\n      content = React.createElement(ProfileCard, {\n        email: this.props.userData.email,\n        first_name: this.props.userData.first_name,\n        last_name: this.props.userData.last_name,\n        username: this.props.userData.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, isAuthenticated, content, this.props.userId);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.userData,\n    loading: state.auth.loading,\n    isAuth: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => {\n      actions.getUserFavoritePokemon(userId);\n    },\n    getUserFavoritePokemon: () => {\n      return false;\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/containers/Profile/Profile.js"],"names":["React","Component","connect","Spinner","Redirect","ProfileCard","actions","Profile","componentDidMount","props","getUserFavoritePokemon","userId","render","content","console","log","isAuth","isAuthenticated","loading","userData","email","first_name","last_name","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch","getUserData"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAC7BO,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,sBAAX,CAAkC,KAAKD,KAAL,CAAWE,MAA7C;AACH;;AACAC,EAAAA,MAAM,GAAE;AACJ,QAAIC,OAAO,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWO,MAAvB;AACA,QAAIC,eAAe,GAAG,IAAtB;;AACA,QAAG,CAAC,KAAKR,KAAL,CAAWO,MAAf,EAAsB;AACnBC,MAAAA,eAAe,GAAI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB;AACF;;AACD,QAAG,CAAC,KAAKR,KAAL,CAAWS,OAAf,EAAuB;AACnBL,MAAAA,OAAO,GAAG,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWU,QAAX,CAAoBC,KAAxC;AAA+C,QAAA,UAAU,EAAE,KAAKX,KAAL,CAAWU,QAAX,CAAoBE,UAA/E;AAA2F,QAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWU,QAAX,CAAoBG,SAA1H;AAAqI,QAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWU,QAAX,CAAoBC,KAAnK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,eADL,EAEKJ,OAFL,EAGK,KAAKJ,KAAL,CAAWE,MAHhB,CADJ;AAOH;;AAtB2B;;AAyBhC,MAAMY,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHL,IAAAA,QAAQ,EAAEK,KAAK,CAACC,IAAN,CAAWN,QADlB;AAEHD,IAAAA,OAAO,EAAEM,KAAK,CAACC,IAAN,CAAWP,OAFjB;AAGHF,IAAAA,MAAM,EAAEQ,KAAK,CAACC,IAAN,CAAWC,KAAX,KAAqB;AAH1B,GAAP;AAKH,CAND;;AAQA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHC,IAAAA,WAAW,EAAIlB,MAAD,IAAU;AAACL,MAAAA,OAAO,CAACI,sBAAR,CAA+BC,MAA/B;AAAuC,KAD7D;AAEHD,IAAAA,sBAAsB,EAAI,MAAI;AAAC,aAAO,KAAP;AAAa;AAFzC,GAAP;AAIH,CALD;;AAMA,eAAeR,OAAO,CAACqB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CpB,OAA7C,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport { Redirect } from 'react-router'\nimport ProfileCard from '../../components/ProfileCard/ProfileCard'\nimport * as actions from '../../store/actions/index'\n\nclass Profile extends Component {\n   componentDidMount(){\n       this.props.getUserFavoritePokemon(this.props.userId)\n   }\n    render(){\n        let content = <Spinner/>\n        console.log(this.props.isAuth)\n        let isAuthenticated = null\n        if(!this.props.isAuth){\n           isAuthenticated =  <Redirect to=\"/login\" />\n        }\n        if(!this.props.loading){\n            content = <ProfileCard email={this.props.userData.email} first_name={this.props.userData.first_name} last_name={this.props.userData.last_name} username={this.props.userData.email}/>\n        }\n\n        return(\n            <div>\n                {isAuthenticated}\n                {content}\n                {this.props.userId}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        userData: state.auth.userData,\n        loading: state.auth.loading,\n        isAuth: state.auth.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserData : (userId)=>{actions.getUserFavoritePokemon(userId)},\n        getUserFavoritePokemon  : ()=>{return false}\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)"]},"metadata":{},"sourceType":"module"}