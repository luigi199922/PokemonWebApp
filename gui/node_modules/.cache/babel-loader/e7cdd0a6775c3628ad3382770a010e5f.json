{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios/axios\";\nimport axiosUsers from \"../../axios/users\";\nexport function* fetchPokemonByIdSaga(action) {\n  try {\n    const res = yield axios.get(action.id);\n    const types = yield put(res.data.types.map(type => type.type.name));\n    console.log(types);\n    const pokemon = {\n      abilities: res.data.abilities,\n      base_experience: res.data.base_experience,\n      forms: res.data.forms,\n      height: res.data.height / 10,\n      id: res.data.id,\n      weight: res.data.weight / 10,\n      types: types,\n      name: res.data.name,\n      stats: res.data.stats,\n      imageURL: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + res.data.id + \".png\"\n    };\n    yield put(actions.fetchPokemonByIdSuccess(pokemon));\n  } catch (error) {\n    yield put(actions.fetchPokemonByIdFailed(error));\n  }\n}\nexport function* getUserFavoritePokemonSaga(action) {\n  console.log(action.userId); // Headers\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }; // If token, add to headers config\n\n  if (action.token) {\n    config.headers[\"Authorization\"] = `Token ${action.token}`;\n  }\n\n  const url = \"user-favorite/\" + action.userId + \"/\";\n\n  try {\n    const res = yield axiosUsers.get(url);\n    console.log(res.data.pokemon);\n    yield put(actions.getUserFavoritePokemonSuccess(res.data.pokemon));\n  } catch (error) {\n    yield put(actions.getUserFavoritePokemonFailed(error));\n  }\n}\nexport function* fetchPokemonListSaga(action) {\n  try {\n    const response = yield axios.get(\"/?offset=\" + action.offset + \"&limit=\" + action.limit);\n    yield put(actions.fetchPokemonSuccess(response.data.results, action.offset, action.limit));\n  } catch (error) {\n    yield put(actions.fetchPokemonFailed());\n  }\n}","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/saga/pokemon.js"],"names":["put","actions","axios","axiosUsers","fetchPokemonByIdSaga","action","res","get","id","types","data","map","type","name","console","log","pokemon","abilities","base_experience","forms","height","weight","stats","imageURL","fetchPokemonByIdSuccess","error","fetchPokemonByIdFailed","getUserFavoritePokemonSaga","userId","config","headers","token","url","getUserFavoritePokemonSuccess","getUserFavoritePokemonFailed","fetchPokemonListSaga","response","offset","limit","fetchPokemonSuccess","results","fetchPokemonFailed"],"mappings":"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","sourcesContent":["import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios/axios\";\nimport axiosUsers from \"../../axios/users\";\n\nexport function* fetchPokemonByIdSaga(action) {\n  try {\n    const res = yield axios.get(action.id);\n    const types = yield put(res.data.types.map(type => type.type.name));\n    console.log(types)\n    const pokemon = {\n      abilities: res.data.abilities,\n      base_experience: res.data.base_experience,\n      forms: res.data.forms,\n      height: res.data.height / 10,\n      id: res.data.id,\n      weight: res.data.weight / 10,\n      types: types,\n      name: res.data.name,\n      stats: res.data.stats,\n      imageURL:\n        \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\n        res.data.id +\n        \".png\"\n    };\n    yield put(actions.fetchPokemonByIdSuccess(pokemon));\n  } catch (error) {\n    yield put(actions.fetchPokemonByIdFailed(error));\n  }\n}\n\nexport function* getUserFavoritePokemonSaga(action) {\n  console.log(action.userId)\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \n    },\n  };\n  // If token, add to headers config\n  if (action.token) {\n    config.headers[\"Authorization\"] = `Token ${action.token}`;\n  }\n  const url = \"user-favorite/\" + action.userId + \"/\";\n  try {\n    const res = yield axiosUsers.get(url);\n    console.log(res.data.pokemon)\n    yield put(actions.getUserFavoritePokemonSuccess(res.data.pokemon));\n  } catch (error) {\n    yield put(actions.getUserFavoritePokemonFailed(error));\n  }\n}\n\nexport function* fetchPokemonListSaga(action) {\n  try {\n    const response = yield axios.get(\n      \"/?offset=\" + action.offset + \"&limit=\" + action.limit\n    );\n    yield put(\n      actions.fetchPokemonSuccess(\n        response.data.results,\n        action.offset,\n        action.limit\n      )\n    );\n  } catch (error) {\n    yield put(actions.fetchPokemonFailed());\n  }\n}\n"]},"metadata":{},"sourceType":"module"}