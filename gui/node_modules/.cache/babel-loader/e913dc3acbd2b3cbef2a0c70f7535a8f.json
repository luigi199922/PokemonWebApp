{"ast":null,"code":"var _jsxFileName = \"/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/containers/Profile/Profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { Redirect } from 'react-router';\nimport ProfileCard from '../../components/ProfileCard/ProfileCard';\nimport * as actions from '../../store/actions/index';\n\nclass Profile extends Component {\n  componentDidMount() {\n    this.props.getUserFavoritePokemon(this.props.userId, this.props.token);\n  }\n\n  render() {\n    let content = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n    let isAuthenticated = null;\n\n    if (!this.props.isAuth) {\n      isAuthenticated = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n    }\n\n    if (!this.props.loading) {\n      content = React.createElement(ProfileCard, {\n        email: this.props.userData.email,\n        first_name: this.props.userData.first_name,\n        last_name: this.props.userData.last_name,\n        username: this.props.userData.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    }\n\n    let userPokemon = null;\n\n    if (this.props.userPokemon) {\n      userPokemon = this.props.userPokemon.map(pokemon => {\n        return React.createElement(PokeCard, {\n          url: pokemon.url,\n          pokemon: pokemon,\n          key: pokemon.name,\n          data: pokemon,\n          showModal: this.onViewModal,\n          pokemonSelect: () => this.detailViewHandler(pokemon.name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, isAuthenticated, content, userPokemon);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.userData,\n    loading: state.auth.loading,\n    isAuth: state.auth.token !== null,\n    userId: state.auth.userData.pk,\n    token: state.auth.token,\n    userPokemon: state.pokemon.favoritePokemon\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserFavoritePokemon: userId => dispatch(actions.getUserFavoritePokemon(userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/containers/Profile/Profile.js"],"names":["React","Component","connect","Spinner","Redirect","ProfileCard","actions","Profile","componentDidMount","props","getUserFavoritePokemon","userId","token","render","content","isAuthenticated","isAuth","loading","userData","email","first_name","last_name","userPokemon","map","pokemon","url","name","onViewModal","detailViewHandler","mapStateToProps","state","auth","pk","favoritePokemon","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport { Redirect } from 'react-router'\nimport ProfileCard from '../../components/ProfileCard/ProfileCard'\nimport * as actions from '../../store/actions/index'\n\n\nclass Profile extends Component {\n   componentDidMount(){\n       this.props.getUserFavoritePokemon(this.props.userId, this.props.token)\n   }\n    render(){\n        let content = <Spinner/>\n        let isAuthenticated = null\n        if(!this.props.isAuth){\n           isAuthenticated =  <Redirect to=\"/login\" />\n        }\n        if(!this.props.loading){\n            content = <ProfileCard email={this.props.userData.email} first_name={this.props.userData.first_name} last_name={this.props.userData.last_name} username={this.props.userData.email}/>\n        }\n        let userPokemon = null\n        if(this.props.userPokemon){\n            userPokemon = this.props.userPokemon.map(pokemon => {\n                return <PokeCard\n                url={pokemon.url}\n                pokemon={pokemon}\n                key={pokemon.name}\n                data={pokemon}\n                showModal={this.onViewModal}\n                pokemonSelect={() => this.detailViewHandler(pokemon.name)}\n                />\n            })\n        }\n\n        return(\n            <div>\n                {isAuthenticated}\n                {content}\n                {userPokemon}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        userData: state.auth.userData,\n        loading: state.auth.loading,\n        isAuth: state.auth.token !== null,\n        userId: state.auth.userData.pk,\n        token: state.auth.token,\n        userPokemon: state.pokemon.favoritePokemon\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserFavoritePokemon: (userId) => dispatch(actions.getUserFavoritePokemon(userId))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)"]},"metadata":{},"sourceType":"module"}