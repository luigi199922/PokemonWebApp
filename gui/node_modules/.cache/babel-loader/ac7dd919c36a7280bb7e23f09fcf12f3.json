{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios/axios\";\nimport axiosUsers from \"../../axios/users\";\nimport axiosPokemon from \"../../axios/pokemon\";\nimport { createHTTPHeaders } from '../../shared/utility';\nexport function* fetchPokemonByIdSaga(action) {\n  try {\n    const res = yield axios.get(action.id);\n    const types = yield res.data.types.map(type => type.type.name);\n    const pokemon = {\n      abilities: res.data.abilities,\n      base_experience: res.data.base_experience,\n      forms: res.data.forms,\n      height: res.data.height / 10,\n      id: res.data.id,\n      weight: res.data.weight / 10,\n      types: types,\n      name: res.data.name,\n      stats: res.data.stats,\n      imageURL: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + res.data.id + \".png\"\n    };\n    yield put(actions.fetchPokemonByIdSuccess(pokemon));\n  } catch (error) {\n    yield put(actions.fetchPokemonByIdFailed(error));\n  }\n}\nexport function* getUserFavoritePokemonSaga(action) {\n  const config = createHTTPHeaders(action.token);\n  const url = \"favorite\";\n\n  try {\n    const res = yield axiosUsers.get(url, config);\n    yield put(actions.getUserFavoritePokemonSuccess(res.data));\n  } catch (error) {\n    yield put(actions.getUserFavoritePokemonFailed(error));\n  }\n}\nexport function* fetchPokemonListSaga(action) {\n  try {\n    const response = yield axios.get(\"/?offset=\" + action.offset + \"&limit=\" + action.limit);\n    yield put(actions.fetchPokemonSuccess(response.data.results, action.offset, action.limit));\n  } catch (error) {\n    yield put(actions.fetchPokemonFailed());\n  }\n}\nexport function* addPokemonToApiSaga(action) {\n  const config = createHTTPHeaders(action.token);\n  const pokemon = {\n    pokemonId: action.id,\n    name: action.name\n  };\n\n  try {\n    const url = \"create\";\n    const response = yield axiosPokemon.post(url, pokemon, config);\n    console.log(response);\n  } catch (error) {}\n\n  try {\n    const url = \"favorite\";\n    console.log(config);\n    const response2 = yield axiosUsers.post(url, pokemon, config);\n    console.log(response2);\n  } catch (error) {\n    console.log(error);\n  }\n}","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/saga/pokemon.js"],"names":["put","actions","axios","axiosUsers","axiosPokemon","createHTTPHeaders","fetchPokemonByIdSaga","action","res","get","id","types","data","map","type","name","pokemon","abilities","base_experience","forms","height","weight","stats","imageURL","fetchPokemonByIdSuccess","error","fetchPokemonByIdFailed","getUserFavoritePokemonSaga","config","token","url","getUserFavoritePokemonSuccess","getUserFavoritePokemonFailed","fetchPokemonListSaga","response","offset","limit","fetchPokemonSuccess","results","fetchPokemonFailed","addPokemonToApiSaga","pokemonId","post","console","log","response2"],"mappings":"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","sourcesContent":["import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios/axios\";\nimport axiosUsers from \"../../axios/users\";\nimport axiosPokemon from \"../../axios/pokemon\"\nimport { createHTTPHeaders } from '../../shared/utility'\n\nexport function* fetchPokemonByIdSaga(action) {\n  try {\n    const res = yield axios.get(action.id);\n    const types = yield res.data.types.map((type) => type.type.name);\n    const pokemon = {\n      abilities: res.data.abilities,\n      base_experience: res.data.base_experience,\n      forms: res.data.forms,\n      height: res.data.height / 10,\n      id: res.data.id,\n      weight: res.data.weight / 10,\n      types: types,\n      name: res.data.name,\n      stats: res.data.stats,\n      imageURL:\n        \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\n        res.data.id +\n        \".png\",\n    };\n    yield put(actions.fetchPokemonByIdSuccess(pokemon));\n  } catch (error) {\n    yield put(actions.fetchPokemonByIdFailed(error));\n  }\n}\n\nexport function* getUserFavoritePokemonSaga(action) {\n\n  const config = createHTTPHeaders(action.token)\n \n  const url = \"favorite\";\n  try {\n    const res = yield axiosUsers.get(url, config);\n    yield put(actions.getUserFavoritePokemonSuccess(res.data));\n  } catch (error) {\n    yield put(actions.getUserFavoritePokemonFailed(error));\n  }\n}\n\nexport function* fetchPokemonListSaga(action) {\n  try {\n    const response = yield axios.get(\n      \"/?offset=\" + action.offset + \"&limit=\" + action.limit\n    );\n    yield put(\n      actions.fetchPokemonSuccess(\n        response.data.results,\n        action.offset,\n        action.limit\n      )\n    );\n  } catch (error) {\n    yield put(actions.fetchPokemonFailed());\n  }\n}\n\nexport function* addPokemonToApiSaga(action) {\n  const config = createHTTPHeaders(action.token)\n  const pokemon = {\n    pokemonId: action.id,\n    name: action.name,\n  };\n  try {\n    \n    const url = \"create\";\n    const response = yield axiosPokemon.post(url, pokemon, config);\n    console.log(response)\n  } catch (error) {\n      \n  }\n    try{\n    const url = \"favorite\";\n    console.log(config)\n    const response2 = yield axiosUsers.post(url, pokemon, config);\n    console.log(response2)\n  } catch(error){\n    console.log(error)\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}