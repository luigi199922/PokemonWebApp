{"ast":null,"code":"import * as actions from './actionTypes';\nimport axios from '../../axios/axios';\nexport const fetchPokemon = (offset, limit) => {\n  return dispatch => {\n    axios.get('/?offset=' + offset + '&limit=' + limit).then(response => {\n      //maybe get the page number and add it to the url\n      dispatch(fetchPokemonSuccess(response.data.results, offset, limit));\n    }).catch(error => {\n      dispatch(fetchPokemonFailed());\n    });\n  };\n};\nexport const fetchPokemonFailed = () => {\n  return {\n    type: actions.FETCH_POKEMON_FAILED\n  };\n};\nexport const fetchPokemonSuccess = (pokemonArray, lowerBound, upperBound) => {\n  return {\n    type: actions.FETCH_POKEMON_SUCCESS,\n    pokemon: pokemonArray,\n    lower: lowerBound,\n    upper: upperBound\n  };\n};\nexport const nextPokemonPage = (offset, limit) => {\n  const newOffset = offset + 28;\n  return fetchPokemon(newOffset, limit);\n};\nexport const previousPokemonPage = (offset, limit) => {\n  const newOffset = offset - 28;\n  return fetchPokemon(newOffset, limit);\n};\nexport const fetchPokemonById = id => {\n  return dispatch => {\n    axios.get(id).then(res => {\n      const types = res.data.types.map(type => type.type.name);\n      const pokemon = {\n        abilities: res.data.abilities,\n        base_experience: res.data.base_experience,\n        forms: res.data.forms,\n        height: res.data.height / 10,\n        id: res.data.id,\n        weight: res.data.weight / 10,\n        types: types,\n        name: res.data.name,\n        stats: res.data.stats,\n        imageURL: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + res.data.id + \".png\"\n      };\n      dispatch(fetchPokemonByIdSuccess(pokemon));\n    }).catch(error => {\n      dispatch(fetchPokemonByIdFailed(error));\n    });\n  };\n};\nexport const fetchPokemonByIdSuccess = pokemon => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_SUCCESS,\n    pokemon: pokemon\n  };\n};\nexport const fetchPokemonByIdFailed = err => {\n  return {\n    type: actions.FETCH_POKEMON_BY_ID_FAILED,\n    error: err\n  };\n};","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/actions/pokemon.js"],"names":["actions","axios","fetchPokemon","offset","limit","dispatch","get","then","response","fetchPokemonSuccess","data","results","catch","error","fetchPokemonFailed","type","FETCH_POKEMON_FAILED","pokemonArray","lowerBound","upperBound","FETCH_POKEMON_SUCCESS","pokemon","lower","upper","nextPokemonPage","newOffset","previousPokemonPage","fetchPokemonById","id","res","types","map","name","abilities","base_experience","forms","height","weight","stats","imageURL","fetchPokemonByIdSuccess","fetchPokemonByIdFailed","FETCH_POKEMON_BY_ID_SUCCESS","err","FETCH_POKEMON_BY_ID_FAILED"],"mappings":"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","sourcesContent":["import * as actions from './actionTypes'\nimport axios from '../../axios/axios'\n\nexport const fetchPokemon = (offset ,limit) => {\n    return (dispatch) => {\n        axios.get('/?offset='+offset+'&limit='+limit).then(response=>{ //maybe get the page number and add it to the url\n            dispatch(fetchPokemonSuccess(response.data.results, offset, limit))\n        }).catch(error => {\n            dispatch(fetchPokemonFailed())\n        })\n    }\n}\nexport const fetchPokemonFailed = () => {\n    return {\n        type :  actions.FETCH_POKEMON_FAILED\n    }\n}\nexport const fetchPokemonSuccess = (pokemonArray, lowerBound, upperBound) => {\n    return {\n        type : actions.FETCH_POKEMON_SUCCESS,\n        pokemon : pokemonArray,\n        lower : lowerBound,\n        upper : upperBound,\n    }\n}\n\nexport const nextPokemonPage = (offset, limit) => {\n    const newOffset = offset + 28;\n    return fetchPokemon(newOffset, limit)\n}\n\nexport const previousPokemonPage = (offset, limit) => {\n    const newOffset = offset - 28;\n    return fetchPokemon(newOffset, limit)\n}\n\nexport const fetchPokemonById = (id) => {\n    return (dispatch) => {\n        axios.get(id).then(res=>{    \n            const types = res.data.types.map(type=> type.type.name)\n            const pokemon = {\n                abilities: res.data.abilities,\n                base_experience: res.data.base_experience,\n                forms: res.data.forms,\n                height: (res.data.height)/10,\n                id: res.data.id,\n                weight: (res.data.weight/10),\n                types: types,\n                name: res.data.name,\n                stats: res.data.stats,\n                imageURL: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + res.data.id +   \".png\"   \n            }\n            dispatch(fetchPokemonByIdSuccess(pokemon))\n        }).catch(error =>{\n            dispatch(fetchPokemonByIdFailed(error))\n        })\n    }\n}\nexport const fetchPokemonByIdSuccess = (pokemon) => {\n    return {\n        type : actions.FETCH_POKEMON_BY_ID_SUCCESS,\n        pokemon : pokemon\n    }\n}\nexport const fetchPokemonByIdFailed = (err) => {\n    return {\n        type : actions.FETCH_POKEMON_BY_ID_FAILED,\n        error : err\n    }\n}"]},"metadata":{},"sourceType":"module"}