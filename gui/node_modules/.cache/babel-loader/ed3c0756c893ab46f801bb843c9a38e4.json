{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios/auth\";\nexport function* checkAuthTimeoutSaga(action) {\n  yield setTimeout(() => {\n    put(actions.logout());\n  }, action.expirationTime * 1000);\n}\nexport function* logoutSaga() {\n  const url = \"logout/\";\n\n  try {\n    const res = yield axios.post(url);\n    yield put(actions.logoutSuccess(res.data));\n  } catch (error) {\n    yield put(actions.authFail(error.response.data));\n  }\n}\nexport function* authCheckState() {\n  const token = localStorage.getItem(\"token\");\n\n  if (!token) {\n    yield put(actions.logout());\n  } else {\n    const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n\n    if (expirationDate <= new Date()) {\n      dispatch(logout());\n    } else {\n      const userId = localStorage.getItem(\"userId\");\n      dispatch(authSuccess(token, userId));\n      dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n    }\n  }\n}","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/saga/auth.js"],"names":["put","actions","axios","checkAuthTimeoutSaga","action","setTimeout","logout","expirationTime","logoutSaga","url","res","post","logoutSuccess","data","error","authFail","response","authCheckState","token","localStorage","getItem","expirationDate","Date","dispatch","userId","authSuccess","checkAuthTimeout","getTime"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAO,UAAUC,oBAAV,CAA+BC,MAA/B,EAAuC;AAC5C,QAAMC,UAAU,CAAC,MAAM;AACrBL,IAAAA,GAAG,CAACC,OAAO,CAACK,MAAR,EAAD,CAAH;AACD,GAFe,EAEbF,MAAM,CAACG,cAAP,GAAwB,IAFX,CAAhB;AAGD;AAED,OAAO,UAAUC,UAAV,GAAuB;AAC5B,QAAMC,GAAG,GAAG,SAAZ;;AACA,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAWF,GAAX,CAAlB;AACA,UAAMT,GAAG,CAACC,OAAO,CAACW,aAAR,CAAsBF,GAAG,CAACG,IAA1B,CAAD,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMd,GAAG,CAACC,OAAO,CAACc,QAAR,CAAiBD,KAAK,CAACE,QAAN,CAAeH,IAAhC,CAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUI,cAAV,GAA2B;AAChC,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAI,CAACF,KAAL,EAAY;AACV,UAAMlB,GAAG,CAACC,OAAO,CAACK,MAAR,EAAD,CAAT;AACD,GAFD,MAEO;AACL,UAAMe,cAAc,GAAG,IAAIC,IAAJ,CAASH,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAT,CAAvB;;AACA,QAAIC,cAAc,IAAI,IAAIC,IAAJ,EAAtB,EAAkC;AAChCC,MAAAA,QAAQ,CAACjB,MAAM,EAAP,CAAR;AACD,KAFD,MAEO;AACL,YAAMkB,MAAM,GAAGL,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AACAG,MAAAA,QAAQ,CAACE,WAAW,CAACP,KAAD,EAAQM,MAAR,CAAZ,CAAR;AACAD,MAAAA,QAAQ,CACNG,gBAAgB,CACd,CAACL,cAAc,CAACM,OAAf,KAA2B,IAAIL,IAAJ,GAAWK,OAAX,EAA5B,IAAoD,IADtC,CADV,CAAR;AAKD;AACF;AACF","sourcesContent":["import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios/auth\";\n\nexport function* checkAuthTimeoutSaga(action) {\n  yield setTimeout(() => {\n    put(actions.logout());\n  }, action.expirationTime * 1000);\n}\n\nexport function* logoutSaga() {\n  const url = \"logout/\";\n  try {\n    const res = yield axios.post(url);\n    yield put(actions.logoutSuccess(res.data));\n  } catch (error) {\n    yield put(actions.authFail(error.response.data));\n  }\n}\n\nexport function* authCheckState() {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    yield put(actions.logout());\n  } else {\n    const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n    if (expirationDate <= new Date()) {\n      dispatch(logout());\n    } else {\n      const userId = localStorage.getItem(\"userId\");\n      dispatch(authSuccess(token, userId));\n      dispatch(\n        checkAuthTimeout(\n          (expirationDate.getTime() - new Date().getTime()) / 1000\n        )\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}