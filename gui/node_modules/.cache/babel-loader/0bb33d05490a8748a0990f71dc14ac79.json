{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport * as actions from '../actions/index';\nimport axios from '../../axios/axios';\nimport axiosUsers from \"../../axios/users\";\nexport function* fetchPokemonByIdSaga(action) {\n  try {\n    const res = yield axios.get(action.id);\n    const types = res.data.types.map(type => type.type.name);\n    const pokemon = {\n      abilities: res.data.abilities,\n      base_experience: res.data.base_experience,\n      forms: res.data.forms,\n      height: res.data.height / 10,\n      id: res.data.id,\n      weight: res.data.weight / 10,\n      types: types,\n      name: res.data.name,\n      stats: res.data.stats,\n      imageURL: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + res.data.id + \".png\"\n    };\n    yield put(actions.fetchPokemonByIdSuccess(pokemon));\n  } catch (error) {\n    yield put(actions.fetchPokemonByIdFailed(error));\n  }\n}\nexport function* getUserFavoritePokemonSaga(action) {\n  try {\n    const res = yield axiosUsers.get(\"user-favorite/\" + action.id);\n    put(actions.getUserFavoritePokemonSuccess(res.data));\n  } catch (error) {\n    put(actionts.getUserFavoritePokemonFailed(error));\n  }\n}","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/saga/pokemon.js"],"names":["put","actions","axios","axiosUsers","fetchPokemonByIdSaga","action","res","get","id","types","data","map","type","name","pokemon","abilities","base_experience","forms","height","weight","stats","imageURL","fetchPokemonByIdSuccess","error","fetchPokemonByIdFailed","getUserFavoritePokemonSaga","getUserFavoritePokemonSuccess","actionts","getUserFavoritePokemonFailed"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAO,UAAUC,oBAAV,CAA+BC,MAA/B,EAAsC;AACzC,MAAG;AACC,UAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUF,MAAM,CAACG,EAAjB,CAAlB;AACA,UAAMC,KAAK,GAAGH,GAAG,CAACI,IAAJ,CAASD,KAAT,CAAeE,GAAf,CAAmBC,IAAI,IAAIA,IAAI,CAACA,IAAL,CAAUC,IAArC,CAAd;AACA,UAAMC,OAAO,GAAG;AACZC,MAAAA,SAAS,EAAET,GAAG,CAACI,IAAJ,CAASK,SADR;AAEZC,MAAAA,eAAe,EAAEV,GAAG,CAACI,IAAJ,CAASM,eAFd;AAGZC,MAAAA,KAAK,EAAEX,GAAG,CAACI,IAAJ,CAASO,KAHJ;AAIZC,MAAAA,MAAM,EAAEZ,GAAG,CAACI,IAAJ,CAASQ,MAAT,GAAkB,EAJd;AAKZV,MAAAA,EAAE,EAAEF,GAAG,CAACI,IAAJ,CAASF,EALD;AAMZW,MAAAA,MAAM,EAAEb,GAAG,CAACI,IAAJ,CAASS,MAAT,GAAkB,EANd;AAOZV,MAAAA,KAAK,EAAEA,KAPK;AAQZI,MAAAA,IAAI,EAAEP,GAAG,CAACI,IAAJ,CAASG,IARH;AASZO,MAAAA,KAAK,EAAEd,GAAG,CAACI,IAAJ,CAASU,KATJ;AAUZC,MAAAA,QAAQ,EACN,8EACAf,GAAG,CAACI,IAAJ,CAASF,EADT,GAEA;AAbU,KAAhB;AAeE,UAAMR,GAAG,CAACC,OAAO,CAACqB,uBAAR,CAAgCR,OAAhC,CAAD,CAAT;AAEL,GApBD,CAoBE,OAAOS,KAAP,EAAa;AACX,UAAMvB,GAAG,CAACC,OAAO,CAACuB,sBAAR,CAA+BD,KAA/B,CAAD,CAAT;AACH;AACJ;AAED,OAAO,UAAUE,0BAAV,CAAqCpB,MAArC,EAA4C;AAC/C,MAAG;AACC,UAAMC,GAAG,GAAG,MAAMH,UAAU,CAACI,GAAX,CAAe,mBAAmBF,MAAM,CAACG,EAAzC,CAAlB;AACAR,IAAAA,GAAG,CAACC,OAAO,CAACyB,6BAAR,CAAsCpB,GAAG,CAACI,IAA1C,CAAD,CAAH;AACH,GAHD,CAGE,OAAMa,KAAN,EAAY;AACVvB,IAAAA,GAAG,CAAC2B,QAAQ,CAACC,4BAAT,CAAsCL,KAAtC,CAAD,CAAH;AACH;AACJ","sourcesContent":["import { put } from 'redux-saga/effects'\nimport * as actions from '../actions/index'\nimport axios from '../../axios/axios'\nimport axiosUsers from \"../../axios/users\";\n\nexport function* fetchPokemonByIdSaga(action){\n    try{\n        const res = yield axios.get(action.id)\n        const types = res.data.types.map(type => type.type.name);\n        const pokemon = {\n            abilities: res.data.abilities,\n            base_experience: res.data.base_experience,\n            forms: res.data.forms,\n            height: res.data.height / 10,\n            id: res.data.id,\n            weight: res.data.weight / 10,\n            types: types,\n            name: res.data.name,\n            stats: res.data.stats,\n            imageURL:\n              \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\n              res.data.id +\n              \".png\"\n          };\n          yield put(actions.fetchPokemonByIdSuccess(pokemon));\n        \n    } catch (error){\n        yield put(actions.fetchPokemonByIdFailed(error));\n    }\n}\n\nexport function* getUserFavoritePokemonSaga(action){\n    try{\n        const res = yield axiosUsers.get(\"user-favorite/\" + action.id)\n        put(actions.getUserFavoritePokemonSuccess(res.data))\n    } catch(error){\n        put(actionts.getUserFavoritePokemonFailed(error));\n    }\n}"]},"metadata":{},"sourceType":"module"}