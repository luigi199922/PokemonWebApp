{"ast":null,"code":"import { put, delay } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios/auth\";\nexport function* checkAuthTimeoutSaga(action) {\n  yield delay(action.expirationTime * 1000);\n  yield put(actions.logoutSuccess());\n}\nexport function* logoutSaga() {\n  const url = \"logout/\";\n\n  try {\n    const res = yield axios.post(url);\n    yield put(actions.logoutSuccess(res.data));\n  } catch (error) {\n    yield put(actions.authFail(error.response.data));\n  }\n}\nexport function* authCheckState() {\n  const token = localStorage.getItem(\"token\");\n\n  if (!token) {\n    yield put(actions.logout());\n  } else {\n    const expirationDate = yield new Date(localStorage.getItem(\"expirationDate\"));\n\n    if (expirationDate <= new Date()) {\n      yield put(actions.logout());\n    } else {\n      const userId = localStorage.getItem(\"userId\");\n      yield put(actions.authSuccess(token, userId));\n      yield put(actions.checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n    }\n  }\n}","map":{"version":3,"sources":["/Users/luispreciado/Documents/CSProjects/WebDevelopment/poke-api/gui/src/store/saga/auth.js"],"names":["put","delay","actions","axios","checkAuthTimeoutSaga","action","expirationTime","logoutSuccess","logoutSaga","url","res","post","data","error","authFail","response","authCheckState","token","localStorage","getItem","logout","expirationDate","Date","userId","authSuccess","checkAuthTimeout","getTime"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,QAA2B,oBAA3B;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAO,UAAUC,oBAAV,CAA+BC,MAA/B,EAAuC;AAC5C,QAAMJ,KAAK,CAACI,MAAM,CAACC,cAAP,GAAwB,IAAzB,CAAX;AACA,QAAMN,GAAG,CAACE,OAAO,CAACK,aAAR,EAAD,CAAT;AACD;AAED,OAAO,UAAUC,UAAV,GAAuB;AAC5B,QAAMC,GAAG,GAAG,SAAZ;;AACA,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAWF,GAAX,CAAlB;AACA,UAAMT,GAAG,CAACE,OAAO,CAACK,aAAR,CAAsBG,GAAG,CAACE,IAA1B,CAAD,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACE,OAAO,CAACY,QAAR,CAAiBD,KAAK,CAACE,QAAN,CAAeH,IAAhC,CAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUI,cAAV,GAA2B;AAChC,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAI,CAACF,KAAL,EAAY;AACV,UAAMjB,GAAG,CAACE,OAAO,CAACkB,MAAR,EAAD,CAAT;AACD,GAFD,MAEO;AACL,UAAMC,cAAc,GAAG,MAAM,IAAIC,IAAJ,CAASJ,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAT,CAA7B;;AACA,QAAIE,cAAc,IAAI,IAAIC,IAAJ,EAAtB,EAAkC;AAChC,YAAMtB,GAAG,CAACE,OAAO,CAACkB,MAAR,EAAD,CAAT;AACD,KAFD,MAEO;AACL,YAAMG,MAAM,GAAGL,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AACA,YAAMnB,GAAG,CAACE,OAAO,CAACsB,WAAR,CAAoBP,KAApB,EAA2BM,MAA3B,CAAD,CAAT;AACA,YAAMvB,GAAG,CACPE,OAAO,CAACuB,gBAAR,CACE,CAACJ,cAAc,CAACK,OAAf,KAA2B,IAAIJ,IAAJ,GAAWI,OAAX,EAA5B,IAAoD,IADtD,CADO,CAAT;AAKD;AACF;AACF","sourcesContent":["import { put, delay } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios/auth\";\n\nexport function* checkAuthTimeoutSaga(action) {\n  yield delay(action.expirationTime * 1000)\n  yield put(actions.logoutSuccess());\n}\n\nexport function* logoutSaga() {\n  const url = \"logout/\";\n  try {\n    const res = yield axios.post(url);\n    yield put(actions.logoutSuccess(res.data));\n  } catch (error) {\n    yield put(actions.authFail(error.response.data));\n  }\n}\n\nexport function* authCheckState() {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    yield put(actions.logout());\n  } else {\n    const expirationDate = yield new Date(localStorage.getItem(\"expirationDate\"));\n    if (expirationDate <= new Date()) {\n      yield put(actions.logout());\n    } else {\n      const userId = localStorage.getItem(\"userId\");\n      yield put(actions.authSuccess(token, userId));\n      yield put(\n        actions.checkAuthTimeout(\n          (expirationDate.getTime() - new Date().getTime()) / 1000\n        )\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}